// deno-lint-ignore-file
// generated by cdk8s
import {
  ApiObject,
  ApiObjectMetadata,
  GroupVersionKind,
} from "https://esm.sh/cdk8s@2.68.58";
import { Construct } from "https://esm.sh/constructs@10.3.0";

/**
 * Connector defines a Tailscale node that will be deployed in the cluster. The
node can be configured to act as a Tailscale subnet router and/or a Tailscale
exit node.
Connector is a cluster-scoped resource.
More info:
https://tailscale.com/kb/1236/kubernetes-operator#deploying-exit-nodes-and-subnet-routers-on-kubernetes-using-connector-custom-resource
 *
 * @schema Connector
 */
export class Connector extends ApiObject {
  /**
   * Returns the apiVersion and kind for "Connector"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: "tailscale.com/v1alpha1",
    kind: "Connector",
  };

  /**
   * Renders a Kubernetes manifest for "Connector".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: ConnectorProps): any {
    return {
      ...Connector.GVK,
      ...toJson_ConnectorProps(props),
    };
  }

  /**
   * Defines a "Connector" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: ConnectorProps) {
    super(scope, id, {
      ...Connector.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public override toJson(): any {
    const resolved = super.toJson();

    return {
      ...Connector.GVK,
      ...toJson_ConnectorProps(resolved),
    };
  }
}

/**
 * Connector defines a Tailscale node that will be deployed in the cluster. The
 * node can be configured to act as a Tailscale subnet router and/or a Tailscale
 * exit node.
 * Connector is a cluster-scoped resource.
 * More info:
 * https://tailscale.com/kb/1236/kubernetes-operator#deploying-exit-nodes-and-subnet-routers-on-kubernetes-using-connector-custom-resource
 *
 * @schema Connector
 */
export interface ConnectorProps {
  /**
   * @schema Connector#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * ConnectorSpec describes the desired Tailscale component.
   * More info:
   * https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
   *
   * @schema Connector#spec
   */
  readonly spec: ConnectorSpec;
}

/**
 * Converts an object of type 'ConnectorProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ConnectorProps(
  obj: ConnectorProps | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "metadata": obj.metadata,
    "spec": toJson_ConnectorSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * ConnectorSpec describes the desired Tailscale component.
 * More info:
 * https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
 *
 * @schema ConnectorSpec
 */
export interface ConnectorSpec {
  /**
   * ExitNode defines whether the Connector node should act as a
   * Tailscale exit node. Defaults to false.
   * https://tailscale.com/kb/1103/exit-nodes
   *
   * @default false.
   * @schema ConnectorSpec#exitNode
   */
  readonly exitNode?: boolean;

  /**
   * Hostname is the tailnet hostname that should be assigned to the
   * Connector node. If unset, hostname defaults to <connector
   * name>-connector. Hostname can contain lower case letters, numbers and
   * dashes, it must not start or end with a dash and must be between 2
   * and 63 characters long.
   *
   * @schema ConnectorSpec#hostname
   */
  readonly hostname?: string;

  /**
   * ProxyClass is the name of the ProxyClass custom resource that
   * contains configuration options that should be applied to the
   * resources created for this Connector. If unset, the operator will
   * create resources with the default configuration.
   *
   * @schema ConnectorSpec#proxyClass
   */
  readonly proxyClass?: string;

  /**
   * SubnetRouter defines subnet routes that the Connector node should
   * expose to tailnet. If unset, none are exposed.
   * https://tailscale.com/kb/1019/subnets/
   *
   * @schema ConnectorSpec#subnetRouter
   */
  readonly subnetRouter?: ConnectorSpecSubnetRouter;

  /**
   * Tags that the Tailscale node will be tagged with.
   * Defaults to [tag:k8s].
   * To autoapprove the subnet routes or exit node defined by a Connector,
   * you can configure Tailscale ACLs to give these tags the necessary
   * permissions.
   * See https://tailscale.com/kb/1018/acls/#auto-approvers-for-routes-and-exit-nodes.
   * If you specify custom tags here, you must also make the operator an owner of these tags.
   * See  https://tailscale.com/kb/1236/kubernetes-operator/#setting-up-the-kubernetes-operator.
   * Tags cannot be changed once a Connector node has been created.
   * Tag values must be in form ^tag:[a-zA-Z][a-zA-Z0-9-]*$.
   *
   * @default tag:k8s].
   * @schema ConnectorSpec#tags
   */
  readonly tags?: string[];
}

/**
 * Converts an object of type 'ConnectorSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ConnectorSpec(
  obj: ConnectorSpec | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "exitNode": obj.exitNode,
    "hostname": obj.hostname,
    "proxyClass": obj.proxyClass,
    "subnetRouter": toJson_ConnectorSpecSubnetRouter(obj.subnetRouter),
    "tags": obj.tags?.map((y) => y),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * SubnetRouter defines subnet routes that the Connector node should
 * expose to tailnet. If unset, none are exposed.
 * https://tailscale.com/kb/1019/subnets/
 *
 * @schema ConnectorSpecSubnetRouter
 */
export interface ConnectorSpecSubnetRouter {
  /**
   * AdvertiseRoutes refer to CIDRs that the subnet router should make
   * available. Route values must be strings that represent a valid IPv4
   * or IPv6 CIDR range. Values can be Tailscale 4via6 subnet routes.
   * https://tailscale.com/kb/1201/4via6-subnets/
   *
   * @schema ConnectorSpecSubnetRouter#advertiseRoutes
   */
  readonly advertiseRoutes: string[];
}

/**
 * Converts an object of type 'ConnectorSpecSubnetRouter' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ConnectorSpecSubnetRouter(
  obj: ConnectorSpecSubnetRouter | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "advertiseRoutes": obj.advertiseRoutes?.map((y) => y),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * DNSConfig can be deployed to cluster to make a subset of Tailscale MagicDNS
names resolvable by cluster workloads. Use this if: A) you need to refer to
tailnet services, exposed to cluster via Tailscale Kubernetes operator egress
proxies by the MagicDNS names of those tailnet services (usually because the
services run over HTTPS)
B) you have exposed a cluster workload to the tailnet using Tailscale Ingress
and you also want to refer to the workload from within the cluster over the
Ingress's MagicDNS name (usually because you have some callback component
that needs to use the same URL as that used by a non-cluster client on
tailnet).
When a DNSConfig is applied to a cluster, Tailscale Kubernetes operator will
deploy a nameserver for ts.net DNS names and automatically populate it with records
for any Tailscale egress or Ingress proxies deployed to that cluster.
Currently you must manually update your cluster DNS configuration to add the
IP address of the deployed nameserver as a ts.net stub nameserver.
Instructions for how to do it:
https://kubernetes.io/docs/tasks/administer-cluster/dns-custom-nameservers/#configuration-of-stub-domain-and-upstream-nameserver-using-coredns (for CoreDNS),
https://cloud.google.com/kubernetes-engine/docs/how-to/kube-dns (for kube-dns).
Tailscale Kubernetes operator will write the address of a Service fronting
the nameserver to dsnconfig.status.nameserver.ip.
DNSConfig is a singleton - you must not create more than one.
NB: if you want cluster workloads to be able to refer to Tailscale Ingress
using its MagicDNS name, you must also annotate the Ingress resource with
tailscale.com/experimental-forward-cluster-traffic-via-ingress annotation to
ensure that the proxy created for the Ingress listens on its Pod IP address.
NB: Clusters where Pods get assigned IPv6 addresses only are currently not supported.
 *
 * @schema DNSConfig
 */
export class DnsConfig extends ApiObject {
  /**
   * Returns the apiVersion and kind for "DNSConfig"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: "tailscale.com/v1alpha1",
    kind: "DNSConfig",
  };

  /**
   * Renders a Kubernetes manifest for "DNSConfig".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: DnsConfigProps): any {
    return {
      ...DnsConfig.GVK,
      ...toJson_DnsConfigProps(props),
    };
  }

  /**
   * Defines a "DNSConfig" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: DnsConfigProps) {
    super(scope, id, {
      ...DnsConfig.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public override toJson(): any {
    const resolved = super.toJson();

    return {
      ...DnsConfig.GVK,
      ...toJson_DnsConfigProps(resolved),
    };
  }
}

/**
 * DNSConfig can be deployed to cluster to make a subset of Tailscale MagicDNS
 * names resolvable by cluster workloads. Use this if: A) you need to refer to
 * tailnet services, exposed to cluster via Tailscale Kubernetes operator egress
 * proxies by the MagicDNS names of those tailnet services (usually because the
 * services run over HTTPS)
 * B) you have exposed a cluster workload to the tailnet using Tailscale Ingress
 * and you also want to refer to the workload from within the cluster over the
 * Ingress's MagicDNS name (usually because you have some callback component
 * that needs to use the same URL as that used by a non-cluster client on
 * tailnet).
 * When a DNSConfig is applied to a cluster, Tailscale Kubernetes operator will
 * deploy a nameserver for ts.net DNS names and automatically populate it with records
 * for any Tailscale egress or Ingress proxies deployed to that cluster.
 * Currently you must manually update your cluster DNS configuration to add the
 * IP address of the deployed nameserver as a ts.net stub nameserver.
 * Instructions for how to do it:
 * https://kubernetes.io/docs/tasks/administer-cluster/dns-custom-nameservers/#configuration-of-stub-domain-and-upstream-nameserver-using-coredns (for CoreDNS),
 * https://cloud.google.com/kubernetes-engine/docs/how-to/kube-dns (for kube-dns).
 * Tailscale Kubernetes operator will write the address of a Service fronting
 * the nameserver to dsnconfig.status.nameserver.ip.
 * DNSConfig is a singleton - you must not create more than one.
 * NB: if you want cluster workloads to be able to refer to Tailscale Ingress
 * using its MagicDNS name, you must also annotate the Ingress resource with
 * tailscale.com/experimental-forward-cluster-traffic-via-ingress annotation to
 * ensure that the proxy created for the Ingress listens on its Pod IP address.
 * NB: Clusters where Pods get assigned IPv6 addresses only are currently not supported.
 *
 * @schema DNSConfig
 */
export interface DnsConfigProps {
  /**
   * @schema DNSConfig#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * Spec describes the desired DNS configuration.
   * More info:
   * https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
   *
   * @schema DNSConfig#spec
   */
  readonly spec: DnsConfigSpec;
}

/**
 * Converts an object of type 'DnsConfigProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DnsConfigProps(
  obj: DnsConfigProps | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "metadata": obj.metadata,
    "spec": toJson_DnsConfigSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * Spec describes the desired DNS configuration.
 * More info:
 * https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
 *
 * @schema DnsConfigSpec
 */
export interface DnsConfigSpec {
  /**
   * Configuration for a nameserver that can resolve ts.net DNS names
   * associated with in-cluster proxies for Tailscale egress Services and
   * Tailscale Ingresses. The operator will always deploy this nameserver
   * when a DNSConfig is applied.
   *
   * @schema DnsConfigSpec#nameserver
   */
  readonly nameserver: DnsConfigSpecNameserver;
}

/**
 * Converts an object of type 'DnsConfigSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DnsConfigSpec(
  obj: DnsConfigSpec | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "nameserver": toJson_DnsConfigSpecNameserver(obj.nameserver),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * Configuration for a nameserver that can resolve ts.net DNS names
 * associated with in-cluster proxies for Tailscale egress Services and
 * Tailscale Ingresses. The operator will always deploy this nameserver
 * when a DNSConfig is applied.
 *
 * @schema DnsConfigSpecNameserver
 */
export interface DnsConfigSpecNameserver {
  /**
   * Nameserver image.
   *
   * @schema DnsConfigSpecNameserver#image
   */
  readonly image?: DnsConfigSpecNameserverImage;
}

/**
 * Converts an object of type 'DnsConfigSpecNameserver' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DnsConfigSpecNameserver(
  obj: DnsConfigSpecNameserver | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "image": toJson_DnsConfigSpecNameserverImage(obj.image),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * Nameserver image.
 *
 * @schema DnsConfigSpecNameserverImage
 */
export interface DnsConfigSpecNameserverImage {
  /**
   * Repo defaults to tailscale/k8s-nameserver.
   *
   * @schema DnsConfigSpecNameserverImage#repo
   */
  readonly repo?: string;

  /**
   * Tag defaults to operator's own tag.
   *
   * @schema DnsConfigSpecNameserverImage#tag
   */
  readonly tag?: string;
}

/**
 * Converts an object of type 'DnsConfigSpecNameserverImage' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DnsConfigSpecNameserverImage(
  obj: DnsConfigSpecNameserverImage | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "repo": obj.repo,
    "tag": obj.tag,
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * ProxyClass describes a set of configuration parameters that can be applied to
proxy resources created by the Tailscale Kubernetes operator.
To apply a given ProxyClass to resources created for a tailscale Ingress or
Service, use tailscale.com/proxy-class=<proxyclass-name> label. To apply a
given ProxyClass to resources created for a Connector, use
connector.spec.proxyClass field.
ProxyClass is a cluster scoped resource.
More info:
https://tailscale.com/kb/1236/kubernetes-operator#cluster-resource-customization-using-proxyclass-custom-resource.
 *
 * @schema ProxyClass
 */
export class ProxyClass extends ApiObject {
  /**
   * Returns the apiVersion and kind for "ProxyClass"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: "tailscale.com/v1alpha1",
    kind: "ProxyClass",
  };

  /**
   * Renders a Kubernetes manifest for "ProxyClass".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: ProxyClassProps): any {
    return {
      ...ProxyClass.GVK,
      ...toJson_ProxyClassProps(props),
    };
  }

  /**
   * Defines a "ProxyClass" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: ProxyClassProps) {
    super(scope, id, {
      ...ProxyClass.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public override toJson(): any {
    const resolved = super.toJson();

    return {
      ...ProxyClass.GVK,
      ...toJson_ProxyClassProps(resolved),
    };
  }
}

/**
 * ProxyClass describes a set of configuration parameters that can be applied to
 * proxy resources created by the Tailscale Kubernetes operator.
 * To apply a given ProxyClass to resources created for a tailscale Ingress or
 * Service, use tailscale.com/proxy-class=<proxyclass-name> label. To apply a
 * given ProxyClass to resources created for a Connector, use
 * connector.spec.proxyClass field.
 * ProxyClass is a cluster scoped resource.
 * More info:
 * https://tailscale.com/kb/1236/kubernetes-operator#cluster-resource-customization-using-proxyclass-custom-resource.
 *
 * @schema ProxyClass
 */
export interface ProxyClassProps {
  /**
   * @schema ProxyClass#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * Specification of the desired state of the ProxyClass resource.
   * https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
   *
   * @schema ProxyClass#spec
   */
  readonly spec: ProxyClassSpec;
}

/**
 * Converts an object of type 'ProxyClassProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassProps(
  obj: ProxyClassProps | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "metadata": obj.metadata,
    "spec": toJson_ProxyClassSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * Specification of the desired state of the ProxyClass resource.
 * https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
 *
 * @schema ProxyClassSpec
 */
export interface ProxyClassSpec {
  /**
   * Configuration for proxy metrics. Metrics are currently not supported
   * for egress proxies and for Ingress proxies that have been configured
   * with tailscale.com/experimental-forward-cluster-traffic-via-ingress
   * annotation. Note that the metrics are currently considered unstable
   * and will likely change in breaking ways in the future - we only
   * recommend that you use those for debugging purposes.
   *
   * @schema ProxyClassSpec#metrics
   */
  readonly metrics?: ProxyClassSpecMetrics;

  /**
   * Configuration parameters for the proxy's StatefulSet. Tailscale
   * Kubernetes operator deploys a StatefulSet for each of the user
   * configured proxies (Tailscale Ingress, Tailscale Service, Connector).
   *
   * @schema ProxyClassSpec#statefulSet
   */
  readonly statefulSet?: ProxyClassSpecStatefulSet;

  /**
   * TailscaleConfig contains options to configure the tailscale-specific
   * parameters of proxies.
   *
   * @schema ProxyClassSpec#tailscale
   */
  readonly tailscale?: ProxyClassSpecTailscale;
}

/**
 * Converts an object of type 'ProxyClassSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpec(
  obj: ProxyClassSpec | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "metrics": toJson_ProxyClassSpecMetrics(obj.metrics),
    "statefulSet": toJson_ProxyClassSpecStatefulSet(obj.statefulSet),
    "tailscale": toJson_ProxyClassSpecTailscale(obj.tailscale),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * Configuration for proxy metrics. Metrics are currently not supported
 * for egress proxies and for Ingress proxies that have been configured
 * with tailscale.com/experimental-forward-cluster-traffic-via-ingress
 * annotation. Note that the metrics are currently considered unstable
 * and will likely change in breaking ways in the future - we only
 * recommend that you use those for debugging purposes.
 *
 * @schema ProxyClassSpecMetrics
 */
export interface ProxyClassSpecMetrics {
  /**
   * Setting enable to true will make the proxy serve Tailscale metrics
   * at <pod-ip>:9001/debug/metrics.
   * Defaults to false.
   *
   * @default false.
   * @schema ProxyClassSpecMetrics#enable
   */
  readonly enable: boolean;
}

/**
 * Converts an object of type 'ProxyClassSpecMetrics' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecMetrics(
  obj: ProxyClassSpecMetrics | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "enable": obj.enable,
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * Configuration parameters for the proxy's StatefulSet. Tailscale
 * Kubernetes operator deploys a StatefulSet for each of the user
 * configured proxies (Tailscale Ingress, Tailscale Service, Connector).
 *
 * @schema ProxyClassSpecStatefulSet
 */
export interface ProxyClassSpecStatefulSet {
  /**
   * Annotations that will be added to the StatefulSet created for the proxy.
   * Any Annotations specified here will be merged with the default annotations
   * applied to the StatefulSet by the Tailscale Kubernetes operator as
   * well as any other annotations that might have been applied by other
   * actors.
   * Annotations must be valid Kubernetes annotations.
   * https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/#syntax-and-character-set
   *
   * @schema ProxyClassSpecStatefulSet#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * Labels that will be added to the StatefulSet created for the proxy.
   * Any labels specified here will be merged with the default labels
   * applied to the StatefulSet by the Tailscale Kubernetes operator as
   * well as any other labels that might have been applied by other
   * actors.
   * Label keys and values must be valid Kubernetes label keys and values.
   * https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#syntax-and-character-set
   *
   * @schema ProxyClassSpecStatefulSet#labels
   */
  readonly labels?: { [key: string]: string };

  /**
   * Configuration for the proxy Pod.
   *
   * @schema ProxyClassSpecStatefulSet#pod
   */
  readonly pod?: ProxyClassSpecStatefulSetPod;
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSet(
  obj: ProxyClassSpecStatefulSet | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "annotations": ((obj.annotations) === undefined)
      ? undefined
      : (Object.entries(obj.annotations).reduce(
        (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
        {},
      )),
    "labels": ((obj.labels) === undefined)
      ? undefined
      : (Object.entries(obj.labels).reduce(
        (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
        {},
      )),
    "pod": toJson_ProxyClassSpecStatefulSetPod(obj.pod),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * TailscaleConfig contains options to configure the tailscale-specific
 * parameters of proxies.
 *
 * @schema ProxyClassSpecTailscale
 */
export interface ProxyClassSpecTailscale {
  /**
   * AcceptRoutes can be set to true to make the proxy instance accept
   * routes advertized by other nodes on the tailnet, such as subnet
   * routes.
   * This is equivalent of passing --accept-routes flag to a tailscale Linux client.
   * https://tailscale.com/kb/1019/subnets#use-your-subnet-routes-from-other-machines
   * Defaults to false.
   *
   * @default false.
   * @schema ProxyClassSpecTailscale#acceptRoutes
   */
  readonly acceptRoutes?: boolean;
}

/**
 * Converts an object of type 'ProxyClassSpecTailscale' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecTailscale(
  obj: ProxyClassSpecTailscale | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "acceptRoutes": obj.acceptRoutes,
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * Configuration for the proxy Pod.
 *
 * @schema ProxyClassSpecStatefulSetPod
 */
export interface ProxyClassSpecStatefulSetPod {
  /**
   * Proxy Pod's affinity rules.
   * By default, the Tailscale Kubernetes operator does not apply any affinity rules.
   * https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#affinity
   *
   * @schema ProxyClassSpecStatefulSetPod#affinity
   */
  readonly affinity?: ProxyClassSpecStatefulSetPodAffinity;

  /**
   * Annotations that will be added to the proxy Pod.
   * Any annotations specified here will be merged with the default
   * annotations applied to the Pod by the Tailscale Kubernetes operator.
   * Annotations must be valid Kubernetes annotations.
   * https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/#syntax-and-character-set
   *
   * @schema ProxyClassSpecStatefulSetPod#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * Proxy Pod's image pull Secrets.
   * https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#PodSpec
   *
   * @schema ProxyClassSpecStatefulSetPod#imagePullSecrets
   */
  readonly imagePullSecrets?: ProxyClassSpecStatefulSetPodImagePullSecrets[];

  /**
   * Labels that will be added to the proxy Pod.
   * Any labels specified here will be merged with the default labels
   * applied to the Pod by the Tailscale Kubernetes operator.
   * Label keys and values must be valid Kubernetes label keys and values.
   * https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#syntax-and-character-set
   *
   * @schema ProxyClassSpecStatefulSetPod#labels
   */
  readonly labels?: { [key: string]: string };

  /**
   * Proxy Pod's node name.
   * https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#scheduling
   *
   * @schema ProxyClassSpecStatefulSetPod#nodeName
   */
  readonly nodeName?: string;

  /**
   * Proxy Pod's node selector.
   * By default Tailscale Kubernetes operator does not apply any node
   * selector.
   * https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#scheduling
   *
   * @schema ProxyClassSpecStatefulSetPod#nodeSelector
   */
  readonly nodeSelector?: { [key: string]: string };

  /**
   * Proxy Pod's security context.
   * By default Tailscale Kubernetes operator does not apply any Pod
   * security context.
   * https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#security-context-2
   *
   * @schema ProxyClassSpecStatefulSetPod#securityContext
   */
  readonly securityContext?: ProxyClassSpecStatefulSetPodSecurityContext;

  /**
   * Configuration for the proxy container running tailscale.
   *
   * @schema ProxyClassSpecStatefulSetPod#tailscaleContainer
   */
  readonly tailscaleContainer?: ProxyClassSpecStatefulSetPodTailscaleContainer;

  /**
   * Configuration for the proxy init container that enables forwarding.
   *
   * @schema ProxyClassSpecStatefulSetPod#tailscaleInitContainer
   */
  readonly tailscaleInitContainer?:
    ProxyClassSpecStatefulSetPodTailscaleInitContainer;

  /**
   * Proxy Pod's tolerations.
   * By default Tailscale Kubernetes operator does not apply any
   * tolerations.
   * https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#scheduling
   *
   * @schema ProxyClassSpecStatefulSetPod#tolerations
   */
  readonly tolerations?: ProxyClassSpecStatefulSetPodTolerations[];
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPod' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPod(
  obj: ProxyClassSpecStatefulSetPod | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "affinity": toJson_ProxyClassSpecStatefulSetPodAffinity(obj.affinity),
    "annotations": ((obj.annotations) === undefined)
      ? undefined
      : (Object.entries(obj.annotations).reduce(
        (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
        {},
      )),
    "imagePullSecrets": obj.imagePullSecrets?.map((y) =>
      toJson_ProxyClassSpecStatefulSetPodImagePullSecrets(y)
    ),
    "labels": ((obj.labels) === undefined)
      ? undefined
      : (Object.entries(obj.labels).reduce(
        (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
        {},
      )),
    "nodeName": obj.nodeName,
    "nodeSelector": ((obj.nodeSelector) === undefined)
      ? undefined
      : (Object.entries(obj.nodeSelector).reduce(
        (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
        {},
      )),
    "securityContext": toJson_ProxyClassSpecStatefulSetPodSecurityContext(
      obj.securityContext,
    ),
    "tailscaleContainer": toJson_ProxyClassSpecStatefulSetPodTailscaleContainer(
      obj.tailscaleContainer,
    ),
    "tailscaleInitContainer":
      toJson_ProxyClassSpecStatefulSetPodTailscaleInitContainer(
        obj.tailscaleInitContainer,
      ),
    "tolerations": obj.tolerations?.map((y) =>
      toJson_ProxyClassSpecStatefulSetPodTolerations(y)
    ),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * Proxy Pod's affinity rules.
 * By default, the Tailscale Kubernetes operator does not apply any affinity rules.
 * https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#affinity
 *
 * @schema ProxyClassSpecStatefulSetPodAffinity
 */
export interface ProxyClassSpecStatefulSetPodAffinity {
  /**
   * Describes node affinity scheduling rules for the pod.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinity#nodeAffinity
   */
  readonly nodeAffinity?: ProxyClassSpecStatefulSetPodAffinityNodeAffinity;

  /**
   * Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
   *
   * @schema ProxyClassSpecStatefulSetPodAffinity#podAffinity
   */
  readonly podAffinity?: ProxyClassSpecStatefulSetPodAffinityPodAffinity;

  /**
   * Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
   *
   * @schema ProxyClassSpecStatefulSetPodAffinity#podAntiAffinity
   */
  readonly podAntiAffinity?:
    ProxyClassSpecStatefulSetPodAffinityPodAntiAffinity;
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodAffinity(
  obj: ProxyClassSpecStatefulSetPodAffinity | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "nodeAffinity": toJson_ProxyClassSpecStatefulSetPodAffinityNodeAffinity(
      obj.nodeAffinity,
    ),
    "podAffinity": toJson_ProxyClassSpecStatefulSetPodAffinityPodAffinity(
      obj.podAffinity,
    ),
    "podAntiAffinity":
      toJson_ProxyClassSpecStatefulSetPodAffinityPodAntiAffinity(
        obj.podAntiAffinity,
      ),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * LocalObjectReference contains enough information to let you locate the
 * referenced object inside the same namespace.
 *
 * @schema ProxyClassSpecStatefulSetPodImagePullSecrets
 */
export interface ProxyClassSpecStatefulSetPodImagePullSecrets {
  /**
   * Name of the referent.
   * This field is effectively required, but due to backwards compatibility is
   * allowed to be empty. Instances of this type with an empty value here are
   * almost certainly wrong.
   * More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ProxyClassSpecStatefulSetPodImagePullSecrets#name
   */
  readonly name?: string;
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodImagePullSecrets' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodImagePullSecrets(
  obj: ProxyClassSpecStatefulSetPodImagePullSecrets | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "name": obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * Proxy Pod's security context.
 * By default Tailscale Kubernetes operator does not apply any Pod
 * security context.
 * https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#security-context-2
 *
 * @schema ProxyClassSpecStatefulSetPodSecurityContext
 */
export interface ProxyClassSpecStatefulSetPodSecurityContext {
  /**
   * appArmorProfile is the AppArmor options to use by the containers in this pod.
   * Note that this field cannot be set when spec.os.name is windows.
   *
   * @schema ProxyClassSpecStatefulSetPodSecurityContext#appArmorProfile
   */
  readonly appArmorProfile?:
    ProxyClassSpecStatefulSetPodSecurityContextAppArmorProfile;

  /**
   * A special supplemental group that applies to all containers in a pod.
   * Some volume types allow the Kubelet to change the ownership of that volume
   * to be owned by the pod:
   *
   * 1. The owning GID will be the FSGroup
   * 2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
   * 3. The permission bits are OR'd with rw-rw----
   *
   * If unset, the Kubelet will not modify the ownership and permissions of any volume.
   * Note that this field cannot be set when spec.os.name is windows.
   *
   * @schema ProxyClassSpecStatefulSetPodSecurityContext#fsGroup
   */
  readonly fsGroup?: number;

  /**
   * fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
   * before being exposed inside Pod. This field will only apply to
   * volume types which support fsGroup based ownership(and permissions).
   * It will have no effect on ephemeral volume types such as: secret, configmaps
   * and emptydir.
   * Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
   * Note that this field cannot be set when spec.os.name is windows.
   *
   * @schema ProxyClassSpecStatefulSetPodSecurityContext#fsGroupChangePolicy
   */
  readonly fsGroupChangePolicy?: string;

  /**
   * The GID to run the entrypoint of the container process.
   * Uses runtime default if unset.
   * May also be set in SecurityContext.  If set in both SecurityContext and
   * PodSecurityContext, the value specified in SecurityContext takes precedence
   * for that container.
   * Note that this field cannot be set when spec.os.name is windows.
   *
   * @schema ProxyClassSpecStatefulSetPodSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * Indicates that the container must run as a non-root user.
   * If true, the Kubelet will validate the image at runtime to ensure that it
   * does not run as UID 0 (root) and fail to start the container if it does.
   * If unset or false, no such validation will be performed.
   * May also be set in SecurityContext.  If set in both SecurityContext and
   * PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema ProxyClassSpecStatefulSetPodSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * The UID to run the entrypoint of the container process.
   * Defaults to user specified in image metadata if unspecified.
   * May also be set in SecurityContext.  If set in both SecurityContext and
   * PodSecurityContext, the value specified in SecurityContext takes precedence
   * for that container.
   * Note that this field cannot be set when spec.os.name is windows.
   *
   * @default user specified in image metadata if unspecified.
   * @schema ProxyClassSpecStatefulSetPodSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * The SELinux context to be applied to all containers.
   * If unspecified, the container runtime will allocate a random SELinux context for each
   * container.  May also be set in SecurityContext.  If set in
   * both SecurityContext and PodSecurityContext, the value specified in SecurityContext
   * takes precedence for that container.
   * Note that this field cannot be set when spec.os.name is windows.
   *
   * @schema ProxyClassSpecStatefulSetPodSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?:
    ProxyClassSpecStatefulSetPodSecurityContextSeLinuxOptions;

  /**
   * The seccomp options to use by the containers in this pod.
   * Note that this field cannot be set when spec.os.name is windows.
   *
   * @schema ProxyClassSpecStatefulSetPodSecurityContext#seccompProfile
   */
  readonly seccompProfile?:
    ProxyClassSpecStatefulSetPodSecurityContextSeccompProfile;

  /**
   * A list of groups applied to the first process run in each container, in addition
   * to the container's primary GID, the fsGroup (if specified), and group memberships
   * defined in the container image for the uid of the container process. If unspecified,
   * no additional groups are added to any container. Note that group memberships
   * defined in the container image for the uid of the container process are still effective,
   * even if they are not included in this list.
   * Note that this field cannot be set when spec.os.name is windows.
   *
   * @schema ProxyClassSpecStatefulSetPodSecurityContext#supplementalGroups
   */
  readonly supplementalGroups?: number[];

  /**
   * Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
   * sysctls (by the container runtime) might fail to launch.
   * Note that this field cannot be set when spec.os.name is windows.
   *
   * @schema ProxyClassSpecStatefulSetPodSecurityContext#sysctls
   */
  readonly sysctls?: ProxyClassSpecStatefulSetPodSecurityContextSysctls[];

  /**
   * The Windows specific settings applied to all containers.
   * If unspecified, the options within a container's SecurityContext will be used.
   * If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   * Note that this field cannot be set when spec.os.name is linux.
   *
   * @schema ProxyClassSpecStatefulSetPodSecurityContext#windowsOptions
   */
  readonly windowsOptions?:
    ProxyClassSpecStatefulSetPodSecurityContextWindowsOptions;
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodSecurityContext(
  obj: ProxyClassSpecStatefulSetPodSecurityContext | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "appArmorProfile":
      toJson_ProxyClassSpecStatefulSetPodSecurityContextAppArmorProfile(
        obj.appArmorProfile,
      ),
    "fsGroup": obj.fsGroup,
    "fsGroupChangePolicy": obj.fsGroupChangePolicy,
    "runAsGroup": obj.runAsGroup,
    "runAsNonRoot": obj.runAsNonRoot,
    "runAsUser": obj.runAsUser,
    "seLinuxOptions":
      toJson_ProxyClassSpecStatefulSetPodSecurityContextSeLinuxOptions(
        obj.seLinuxOptions,
      ),
    "seccompProfile":
      toJson_ProxyClassSpecStatefulSetPodSecurityContextSeccompProfile(
        obj.seccompProfile,
      ),
    "supplementalGroups": obj.supplementalGroups?.map((y) => y),
    "sysctls": obj.sysctls?.map((y) =>
      toJson_ProxyClassSpecStatefulSetPodSecurityContextSysctls(y)
    ),
    "windowsOptions":
      toJson_ProxyClassSpecStatefulSetPodSecurityContextWindowsOptions(
        obj.windowsOptions,
      ),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * Configuration for the proxy container running tailscale.
 *
 * @schema ProxyClassSpecStatefulSetPodTailscaleContainer
 */
export interface ProxyClassSpecStatefulSetPodTailscaleContainer {
  /**
   * List of environment variables to set in the container.
   * https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#environment-variables
   * Note that environment variables provided here will take precedence
   * over Tailscale-specific environment variables set by the operator,
   * however running proxies with custom values for Tailscale environment
   * variables (i.e TS_USERSPACE) is not recommended and might break in
   * the future.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleContainer#env
   */
  readonly env?: ProxyClassSpecStatefulSetPodTailscaleContainerEnv[];

  /**
   * Container image name. By default images are pulled from
   * docker.io/tailscale/tailscale, but the official images are also
   * available at ghcr.io/tailscale/tailscale. Specifying image name here
   * will override any proxy image values specified via the Kubernetes
   * operator's Helm chart values or PROXY_IMAGE env var in the operator
   * Deployment.
   * https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#image
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleContainer#image
   */
  readonly image?: string;

  /**
   * Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always.
   * https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#image
   *
   * @default Always.
   * @schema ProxyClassSpecStatefulSetPodTailscaleContainer#imagePullPolicy
   */
  readonly imagePullPolicy?:
    ProxyClassSpecStatefulSetPodTailscaleContainerImagePullPolicy;

  /**
   * Container resource requirements.
   * By default Tailscale Kubernetes operator does not apply any resource
   * requirements. The amount of resources required wil depend on the
   * amount of resources the operator needs to parse, usage patterns and
   * cluster size.
   * https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#resources
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleContainer#resources
   */
  readonly resources?: ProxyClassSpecStatefulSetPodTailscaleContainerResources;

  /**
   * Container security context.
   * Security context specified here will override the security context by the operator.
   * By default the operator:
   * - sets 'privileged: true' for the init container
   * - set NET_ADMIN capability for tailscale container for proxies that
   * are created for Services or Connector.
   * https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#security-context
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleContainer#securityContext
   */
  readonly securityContext?:
    ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContext;
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodTailscaleContainer' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodTailscaleContainer(
  obj: ProxyClassSpecStatefulSetPodTailscaleContainer | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "env": obj.env?.map((y) =>
      toJson_ProxyClassSpecStatefulSetPodTailscaleContainerEnv(y)
    ),
    "image": obj.image,
    "imagePullPolicy": obj.imagePullPolicy,
    "resources": toJson_ProxyClassSpecStatefulSetPodTailscaleContainerResources(
      obj.resources,
    ),
    "securityContext":
      toJson_ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContext(
        obj.securityContext,
      ),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * Configuration for the proxy init container that enables forwarding.
 *
 * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainer
 */
export interface ProxyClassSpecStatefulSetPodTailscaleInitContainer {
  /**
   * List of environment variables to set in the container.
   * https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#environment-variables
   * Note that environment variables provided here will take precedence
   * over Tailscale-specific environment variables set by the operator,
   * however running proxies with custom values for Tailscale environment
   * variables (i.e TS_USERSPACE) is not recommended and might break in
   * the future.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainer#env
   */
  readonly env?: ProxyClassSpecStatefulSetPodTailscaleInitContainerEnv[];

  /**
   * Container image name. By default images are pulled from
   * docker.io/tailscale/tailscale, but the official images are also
   * available at ghcr.io/tailscale/tailscale. Specifying image name here
   * will override any proxy image values specified via the Kubernetes
   * operator's Helm chart values or PROXY_IMAGE env var in the operator
   * Deployment.
   * https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#image
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainer#image
   */
  readonly image?: string;

  /**
   * Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always.
   * https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#image
   *
   * @default Always.
   * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainer#imagePullPolicy
   */
  readonly imagePullPolicy?:
    ProxyClassSpecStatefulSetPodTailscaleInitContainerImagePullPolicy;

  /**
   * Container resource requirements.
   * By default Tailscale Kubernetes operator does not apply any resource
   * requirements. The amount of resources required wil depend on the
   * amount of resources the operator needs to parse, usage patterns and
   * cluster size.
   * https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#resources
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainer#resources
   */
  readonly resources?:
    ProxyClassSpecStatefulSetPodTailscaleInitContainerResources;

  /**
   * Container security context.
   * Security context specified here will override the security context by the operator.
   * By default the operator:
   * - sets 'privileged: true' for the init container
   * - set NET_ADMIN capability for tailscale container for proxies that
   * are created for Services or Connector.
   * https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#security-context
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainer#securityContext
   */
  readonly securityContext?:
    ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContext;
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodTailscaleInitContainer' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodTailscaleInitContainer(
  obj: ProxyClassSpecStatefulSetPodTailscaleInitContainer | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "env": obj.env?.map((y) =>
      toJson_ProxyClassSpecStatefulSetPodTailscaleInitContainerEnv(y)
    ),
    "image": obj.image,
    "imagePullPolicy": obj.imagePullPolicy,
    "resources":
      toJson_ProxyClassSpecStatefulSetPodTailscaleInitContainerResources(
        obj.resources,
      ),
    "securityContext":
      toJson_ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContext(
        obj.securityContext,
      ),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * The pod this Toleration is attached to tolerates any taint that matches
 * the triple <key,value,effect> using the matching operator <operator>.
 *
 * @schema ProxyClassSpecStatefulSetPodTolerations
 */
export interface ProxyClassSpecStatefulSetPodTolerations {
  /**
   * Effect indicates the taint effect to match. Empty means match all taint effects.
   * When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
   *
   * @schema ProxyClassSpecStatefulSetPodTolerations#effect
   */
  readonly effect?: string;

  /**
   * Key is the taint key that the toleration applies to. Empty means match all taint keys.
   * If the key is empty, operator must be Exists; this combination means to match all values and all keys.
   *
   * @schema ProxyClassSpecStatefulSetPodTolerations#key
   */
  readonly key?: string;

  /**
   * Operator represents a key's relationship to the value.
   * Valid operators are Exists and Equal. Defaults to Equal.
   * Exists is equivalent to wildcard for value, so that a pod can
   * tolerate all taints of a particular category.
   *
   * @default Equal.
   * @schema ProxyClassSpecStatefulSetPodTolerations#operator
   */
  readonly operator?: string;

  /**
   * TolerationSeconds represents the period of time the toleration (which must be
   * of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
   * it is not set, which means tolerate the taint forever (do not evict). Zero and
   * negative values will be treated as 0 (evict immediately) by the system.
   *
   * @schema ProxyClassSpecStatefulSetPodTolerations#tolerationSeconds
   */
  readonly tolerationSeconds?: number;

  /**
   * Value is the taint value the toleration matches to.
   * If the operator is Exists, the value should be empty, otherwise just a regular string.
   *
   * @schema ProxyClassSpecStatefulSetPodTolerations#value
   */
  readonly value?: string;
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodTolerations' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodTolerations(
  obj: ProxyClassSpecStatefulSetPodTolerations | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "effect": obj.effect,
    "key": obj.key,
    "operator": obj.operator,
    "tolerationSeconds": obj.tolerationSeconds,
    "value": obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * Describes node affinity scheduling rules for the pod.
 *
 * @schema ProxyClassSpecStatefulSetPodAffinityNodeAffinity
 */
export interface ProxyClassSpecStatefulSetPodAffinityNodeAffinity {
  /**
   * The scheduler will prefer to schedule pods to nodes that satisfy
   * the affinity expressions specified by this field, but it may choose
   * a node that violates one or more of the expressions. The node that is
   * most preferred is the one with the greatest sum of weights, i.e.
   * for each node that meets all of the scheduling requirements (resource
   * request, requiredDuringScheduling affinity expressions, etc.),
   * compute a sum by iterating through the elements of this field and adding
   * "weight" to the sum if the node matches the corresponding matchExpressions; the
   * node(s) with the highest sum are the most preferred.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityNodeAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?:
    ProxyClassSpecStatefulSetPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * If the affinity requirements specified by this field are not met at
   * scheduling time, the pod will not be scheduled onto the node.
   * If the affinity requirements specified by this field cease to be met
   * at some point during pod execution (e.g. due to an update), the system
   * may or may not try to eventually evict the pod from its node.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityNodeAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?:
    ProxyClassSpecStatefulSetPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodAffinityNodeAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodAffinityNodeAffinity(
  obj: ProxyClassSpecStatefulSetPodAffinityNodeAffinity | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "preferredDuringSchedulingIgnoredDuringExecution": obj
      .preferredDuringSchedulingIgnoredDuringExecution?.map((y) =>
        toJson_ProxyClassSpecStatefulSetPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution(
          y,
        )
      ),
    "requiredDuringSchedulingIgnoredDuringExecution":
      toJson_ProxyClassSpecStatefulSetPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution(
        obj.requiredDuringSchedulingIgnoredDuringExecution,
      ),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
 *
 * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinity
 */
export interface ProxyClassSpecStatefulSetPodAffinityPodAffinity {
  /**
   * The scheduler will prefer to schedule pods to nodes that satisfy
   * the affinity expressions specified by this field, but it may choose
   * a node that violates one or more of the expressions. The node that is
   * most preferred is the one with the greatest sum of weights, i.e.
   * for each node that meets all of the scheduling requirements (resource
   * request, requiredDuringScheduling affinity expressions, etc.),
   * compute a sum by iterating through the elements of this field and adding
   * "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
   * node(s) with the highest sum are the most preferred.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?:
    ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * If the affinity requirements specified by this field are not met at
   * scheduling time, the pod will not be scheduled onto the node.
   * If the affinity requirements specified by this field cease to be met
   * at some point during pod execution (e.g. due to a pod label update), the
   * system may or may not try to eventually evict the pod from its node.
   * When there are multiple elements, the lists of nodes corresponding to each
   * podAffinityTerm are intersected, i.e. all terms must be satisfied.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?:
    ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodAffinityPodAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodAffinityPodAffinity(
  obj: ProxyClassSpecStatefulSetPodAffinityPodAffinity | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "preferredDuringSchedulingIgnoredDuringExecution": obj
      .preferredDuringSchedulingIgnoredDuringExecution?.map((y) =>
        toJson_ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution(
          y,
        )
      ),
    "requiredDuringSchedulingIgnoredDuringExecution": obj
      .requiredDuringSchedulingIgnoredDuringExecution?.map((y) =>
        toJson_ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution(
          y,
        )
      ),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
 *
 * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinity
 */
export interface ProxyClassSpecStatefulSetPodAffinityPodAntiAffinity {
  /**
   * The scheduler will prefer to schedule pods to nodes that satisfy
   * the anti-affinity expressions specified by this field, but it may choose
   * a node that violates one or more of the expressions. The node that is
   * most preferred is the one with the greatest sum of weights, i.e.
   * for each node that meets all of the scheduling requirements (resource
   * request, requiredDuringScheduling anti-affinity expressions, etc.),
   * compute a sum by iterating through the elements of this field and adding
   * "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
   * node(s) with the highest sum are the most preferred.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?:
    ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * If the anti-affinity requirements specified by this field are not met at
   * scheduling time, the pod will not be scheduled onto the node.
   * If the anti-affinity requirements specified by this field cease to be met
   * at some point during pod execution (e.g. due to a pod label update), the
   * system may or may not try to eventually evict the pod from its node.
   * When there are multiple elements, the lists of nodes corresponding to each
   * podAffinityTerm are intersected, i.e. all terms must be satisfied.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?:
    ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodAffinityPodAntiAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodAffinityPodAntiAffinity(
  obj: ProxyClassSpecStatefulSetPodAffinityPodAntiAffinity | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "preferredDuringSchedulingIgnoredDuringExecution": obj
      .preferredDuringSchedulingIgnoredDuringExecution?.map((y) =>
        toJson_ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution(
          y,
        )
      ),
    "requiredDuringSchedulingIgnoredDuringExecution": obj
      .requiredDuringSchedulingIgnoredDuringExecution?.map((y) =>
        toJson_ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution(
          y,
        )
      ),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * appArmorProfile is the AppArmor options to use by the containers in this pod.
 * Note that this field cannot be set when spec.os.name is windows.
 *
 * @schema ProxyClassSpecStatefulSetPodSecurityContextAppArmorProfile
 */
export interface ProxyClassSpecStatefulSetPodSecurityContextAppArmorProfile {
  /**
   * localhostProfile indicates a profile loaded on the node that should be used.
   * The profile must be preconfigured on the node to work.
   * Must match the loaded name of the profile.
   * Must be set if and only if type is "Localhost".
   *
   * @schema ProxyClassSpecStatefulSetPodSecurityContextAppArmorProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * type indicates which kind of AppArmor profile will be applied.
   * Valid options are:
   * Localhost - a profile pre-loaded on the node.
   * RuntimeDefault - the container runtime's default profile.
   * Unconfined - no AppArmor enforcement.
   *
   * @schema ProxyClassSpecStatefulSetPodSecurityContextAppArmorProfile#type
   */
  readonly type: string;
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodSecurityContextAppArmorProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodSecurityContextAppArmorProfile(
  obj: ProxyClassSpecStatefulSetPodSecurityContextAppArmorProfile | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "localhostProfile": obj.localhostProfile,
    "type": obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * The SELinux context to be applied to all containers.
 * If unspecified, the container runtime will allocate a random SELinux context for each
 * container.  May also be set in SecurityContext.  If set in
 * both SecurityContext and PodSecurityContext, the value specified in SecurityContext
 * takes precedence for that container.
 * Note that this field cannot be set when spec.os.name is windows.
 *
 * @schema ProxyClassSpecStatefulSetPodSecurityContextSeLinuxOptions
 */
export interface ProxyClassSpecStatefulSetPodSecurityContextSeLinuxOptions {
  /**
   * Level is SELinux level label that applies to the container.
   *
   * @schema ProxyClassSpecStatefulSetPodSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * Role is a SELinux role label that applies to the container.
   *
   * @schema ProxyClassSpecStatefulSetPodSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * Type is a SELinux type label that applies to the container.
   *
   * @schema ProxyClassSpecStatefulSetPodSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * User is a SELinux user label that applies to the container.
   *
   * @schema ProxyClassSpecStatefulSetPodSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodSecurityContextSeLinuxOptions(
  obj: ProxyClassSpecStatefulSetPodSecurityContextSeLinuxOptions | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "level": obj.level,
    "role": obj.role,
    "type": obj.type,
    "user": obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * The seccomp options to use by the containers in this pod.
 * Note that this field cannot be set when spec.os.name is windows.
 *
 * @schema ProxyClassSpecStatefulSetPodSecurityContextSeccompProfile
 */
export interface ProxyClassSpecStatefulSetPodSecurityContextSeccompProfile {
  /**
   * localhostProfile indicates a profile defined in a file on the node should be used.
   * The profile must be preconfigured on the node to work.
   * Must be a descending path, relative to the kubelet's configured seccomp profile location.
   * Must be set if type is "Localhost". Must NOT be set for any other type.
   *
   * @schema ProxyClassSpecStatefulSetPodSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * type indicates which kind of seccomp profile will be applied.
   * Valid options are:
   *
   * Localhost - a profile defined in a file on the node should be used.
   * RuntimeDefault - the container runtime default profile should be used.
   * Unconfined - no profile should be applied.
   *
   * @schema ProxyClassSpecStatefulSetPodSecurityContextSeccompProfile#type
   */
  readonly type: string;
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodSecurityContextSeccompProfile(
  obj: ProxyClassSpecStatefulSetPodSecurityContextSeccompProfile | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "localhostProfile": obj.localhostProfile,
    "type": obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * Sysctl defines a kernel parameter to be set
 *
 * @schema ProxyClassSpecStatefulSetPodSecurityContextSysctls
 */
export interface ProxyClassSpecStatefulSetPodSecurityContextSysctls {
  /**
   * Name of a property to set
   *
   * @schema ProxyClassSpecStatefulSetPodSecurityContextSysctls#name
   */
  readonly name: string;

  /**
   * Value of a property to set
   *
   * @schema ProxyClassSpecStatefulSetPodSecurityContextSysctls#value
   */
  readonly value: string;
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodSecurityContextSysctls' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodSecurityContextSysctls(
  obj: ProxyClassSpecStatefulSetPodSecurityContextSysctls | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "name": obj.name,
    "value": obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * The Windows specific settings applied to all containers.
 * If unspecified, the options within a container's SecurityContext will be used.
 * If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
 * Note that this field cannot be set when spec.os.name is linux.
 *
 * @schema ProxyClassSpecStatefulSetPodSecurityContextWindowsOptions
 */
export interface ProxyClassSpecStatefulSetPodSecurityContextWindowsOptions {
  /**
   * GMSACredentialSpec is where the GMSA admission webhook
   * (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
   * GMSA credential spec named by the GMSACredentialSpecName field.
   *
   * @schema ProxyClassSpecStatefulSetPodSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * GMSACredentialSpecName is the name of the GMSA credential spec to use.
   *
   * @schema ProxyClassSpecStatefulSetPodSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * HostProcess determines if a container should be run as a 'Host Process' container.
   * All of a Pod's containers must have the same effective HostProcess value
   * (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
   * In addition, if HostProcess is true then HostNetwork must also be set to true.
   *
   * @schema ProxyClassSpecStatefulSetPodSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * The UserName in Windows to run the entrypoint of the container process.
   * Defaults to the user specified in image metadata if unspecified.
   * May also be set in PodSecurityContext. If set in both SecurityContext and
   * PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @default the user specified in image metadata if unspecified.
   * @schema ProxyClassSpecStatefulSetPodSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodSecurityContextWindowsOptions(
  obj: ProxyClassSpecStatefulSetPodSecurityContextWindowsOptions | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "gmsaCredentialSpec": obj.gmsaCredentialSpec,
    "gmsaCredentialSpecName": obj.gmsaCredentialSpecName,
    "hostProcess": obj.hostProcess,
    "runAsUserName": obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * @schema ProxyClassSpecStatefulSetPodTailscaleContainerEnv
 */
export interface ProxyClassSpecStatefulSetPodTailscaleContainerEnv {
  /**
   * Name of the environment variable. Must be a C_IDENTIFIER.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleContainerEnv#name
   */
  readonly name: string;

  /**
   * Variable references $(VAR_NAME) are expanded using the previously defined
   * environment variables in the container and any service environment
   * variables. If a variable cannot be resolved, the reference in the input
   * string will be unchanged. Double $$ are reduced to a single $, which
   * allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
   * produce the string literal "$(VAR_NAME)". Escaped references will never
   * be expanded, regardless of whether the variable exists or not. Defaults
   * to "".
   *
   * @default .
   * @schema ProxyClassSpecStatefulSetPodTailscaleContainerEnv#value
   */
  readonly value?: string;
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodTailscaleContainerEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodTailscaleContainerEnv(
  obj: ProxyClassSpecStatefulSetPodTailscaleContainerEnv | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "name": obj.name,
    "value": obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always.
 * https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#image
 *
 * @default Always.
 * @schema ProxyClassSpecStatefulSetPodTailscaleContainerImagePullPolicy
 */
export enum ProxyClassSpecStatefulSetPodTailscaleContainerImagePullPolicy {
  /** Always */
  ALWAYS = "Always",
  /** Never */
  NEVER = "Never",
  /** IfNotPresent */
  IF_NOT_PRESENT = "IfNotPresent",
}

/**
 * Container resource requirements.
 * By default Tailscale Kubernetes operator does not apply any resource
 * requirements. The amount of resources required wil depend on the
 * amount of resources the operator needs to parse, usage patterns and
 * cluster size.
 * https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#resources
 *
 * @schema ProxyClassSpecStatefulSetPodTailscaleContainerResources
 */
export interface ProxyClassSpecStatefulSetPodTailscaleContainerResources {
  /**
   * Claims lists the names of resources, defined in spec.resourceClaims,
   * that are used by this container.
   *
   * This is an alpha field and requires enabling the
   * DynamicResourceAllocation feature gate.
   *
   * This field is immutable. It can only be set for containers.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleContainerResources#claims
   */
  readonly claims?:
    ProxyClassSpecStatefulSetPodTailscaleContainerResourcesClaims[];

  /**
   * Limits describes the maximum amount of compute resources allowed.
   * More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleContainerResources#limits
   */
  readonly limits?: {
    [key: string]:
      ProxyClassSpecStatefulSetPodTailscaleContainerResourcesLimits;
  };

  /**
   * Requests describes the minimum amount of compute resources required.
   * If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
   * otherwise to an implementation-defined value. Requests cannot exceed Limits.
   * More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleContainerResources#requests
   */
  readonly requests?: {
    [key: string]:
      ProxyClassSpecStatefulSetPodTailscaleContainerResourcesRequests;
  };
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodTailscaleContainerResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodTailscaleContainerResources(
  obj: ProxyClassSpecStatefulSetPodTailscaleContainerResources | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "claims": obj.claims?.map((y) =>
      toJson_ProxyClassSpecStatefulSetPodTailscaleContainerResourcesClaims(y)
    ),
    "limits": ((obj.limits) === undefined)
      ? undefined
      : (Object.entries(obj.limits).reduce(
        (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }),
        {},
      )),
    "requests": ((obj.requests) === undefined)
      ? undefined
      : (Object.entries(obj.requests).reduce(
        (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }),
        {},
      )),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * Container security context.
 * Security context specified here will override the security context by the operator.
 * By default the operator:
 * - sets 'privileged: true' for the init container
 * - set NET_ADMIN capability for tailscale container for proxies that
 * are created for Services or Connector.
 * https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#security-context
 *
 * @schema ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContext
 */
export interface ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContext {
  /**
   * AllowPrivilegeEscalation controls whether a process can gain more
   * privileges than its parent process. This bool directly controls if
   * the no_new_privs flag will be set on the container process.
   * AllowPrivilegeEscalation is true always when the container is:
   * 1) run as Privileged
   * 2) has CAP_SYS_ADMIN
   * Note that this field cannot be set when spec.os.name is windows.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * appArmorProfile is the AppArmor options to use by this container. If set, this profile
   * overrides the pod's appArmorProfile.
   * Note that this field cannot be set when spec.os.name is windows.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContext#appArmorProfile
   */
  readonly appArmorProfile?:
    ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextAppArmorProfile;

  /**
   * The capabilities to add/drop when running containers.
   * Defaults to the default set of capabilities granted by the container runtime.
   * Note that this field cannot be set when spec.os.name is windows.
   *
   * @default the default set of capabilities granted by the container runtime.
   * @schema ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContext#capabilities
   */
  readonly capabilities?:
    ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextCapabilities;

  /**
   * Run container in privileged mode.
   * Processes in privileged containers are essentially equivalent to root on the host.
   * Defaults to false.
   * Note that this field cannot be set when spec.os.name is windows.
   *
   * @default false.
   * @schema ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * procMount denotes the type of proc mount to use for the containers.
   * The default is DefaultProcMount which uses the container runtime defaults for
   * readonly paths and masked paths.
   * This requires the ProcMountType feature flag to be enabled.
   * Note that this field cannot be set when spec.os.name is windows.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * Whether this container has a read-only root filesystem.
   * Default is false.
   * Note that this field cannot be set when spec.os.name is windows.
   *
   * @default false.
   * @schema ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * The GID to run the entrypoint of the container process.
   * Uses runtime default if unset.
   * May also be set in PodSecurityContext.  If set in both SecurityContext and
   * PodSecurityContext, the value specified in SecurityContext takes precedence.
   * Note that this field cannot be set when spec.os.name is windows.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * Indicates that the container must run as a non-root user.
   * If true, the Kubelet will validate the image at runtime to ensure that it
   * does not run as UID 0 (root) and fail to start the container if it does.
   * If unset or false, no such validation will be performed.
   * May also be set in PodSecurityContext.  If set in both SecurityContext and
   * PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * The UID to run the entrypoint of the container process.
   * Defaults to user specified in image metadata if unspecified.
   * May also be set in PodSecurityContext.  If set in both SecurityContext and
   * PodSecurityContext, the value specified in SecurityContext takes precedence.
   * Note that this field cannot be set when spec.os.name is windows.
   *
   * @default user specified in image metadata if unspecified.
   * @schema ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * The SELinux context to be applied to the container.
   * If unspecified, the container runtime will allocate a random SELinux context for each
   * container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
   * PodSecurityContext, the value specified in SecurityContext takes precedence.
   * Note that this field cannot be set when spec.os.name is windows.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?:
    ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextSeLinuxOptions;

  /**
   * The seccomp options to use by this container. If seccomp options are
   * provided at both the pod & container level, the container options
   * override the pod options.
   * Note that this field cannot be set when spec.os.name is windows.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContext#seccompProfile
   */
  readonly seccompProfile?:
    ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextSeccompProfile;

  /**
   * The Windows specific settings applied to all containers.
   * If unspecified, the options from the PodSecurityContext will be used.
   * If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   * Note that this field cannot be set when spec.os.name is linux.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContext#windowsOptions
   */
  readonly windowsOptions?:
    ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextWindowsOptions;
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContext(
  obj:
    | ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContext
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "allowPrivilegeEscalation": obj.allowPrivilegeEscalation,
    "appArmorProfile":
      toJson_ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextAppArmorProfile(
        obj.appArmorProfile,
      ),
    "capabilities":
      toJson_ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextCapabilities(
        obj.capabilities,
      ),
    "privileged": obj.privileged,
    "procMount": obj.procMount,
    "readOnlyRootFilesystem": obj.readOnlyRootFilesystem,
    "runAsGroup": obj.runAsGroup,
    "runAsNonRoot": obj.runAsNonRoot,
    "runAsUser": obj.runAsUser,
    "seLinuxOptions":
      toJson_ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextSeLinuxOptions(
        obj.seLinuxOptions,
      ),
    "seccompProfile":
      toJson_ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextSeccompProfile(
        obj.seccompProfile,
      ),
    "windowsOptions":
      toJson_ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextWindowsOptions(
        obj.windowsOptions,
      ),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerEnv
 */
export interface ProxyClassSpecStatefulSetPodTailscaleInitContainerEnv {
  /**
   * Name of the environment variable. Must be a C_IDENTIFIER.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerEnv#name
   */
  readonly name: string;

  /**
   * Variable references $(VAR_NAME) are expanded using the previously defined
   * environment variables in the container and any service environment
   * variables. If a variable cannot be resolved, the reference in the input
   * string will be unchanged. Double $$ are reduced to a single $, which
   * allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
   * produce the string literal "$(VAR_NAME)". Escaped references will never
   * be expanded, regardless of whether the variable exists or not. Defaults
   * to "".
   *
   * @default .
   * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerEnv#value
   */
  readonly value?: string;
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodTailscaleInitContainerEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodTailscaleInitContainerEnv(
  obj: ProxyClassSpecStatefulSetPodTailscaleInitContainerEnv | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "name": obj.name,
    "value": obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always.
 * https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#image
 *
 * @default Always.
 * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerImagePullPolicy
 */
export enum ProxyClassSpecStatefulSetPodTailscaleInitContainerImagePullPolicy {
  /** Always */
  ALWAYS = "Always",
  /** Never */
  NEVER = "Never",
  /** IfNotPresent */
  IF_NOT_PRESENT = "IfNotPresent",
}

/**
 * Container resource requirements.
 * By default Tailscale Kubernetes operator does not apply any resource
 * requirements. The amount of resources required wil depend on the
 * amount of resources the operator needs to parse, usage patterns and
 * cluster size.
 * https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#resources
 *
 * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerResources
 */
export interface ProxyClassSpecStatefulSetPodTailscaleInitContainerResources {
  /**
   * Claims lists the names of resources, defined in spec.resourceClaims,
   * that are used by this container.
   *
   * This is an alpha field and requires enabling the
   * DynamicResourceAllocation feature gate.
   *
   * This field is immutable. It can only be set for containers.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerResources#claims
   */
  readonly claims?:
    ProxyClassSpecStatefulSetPodTailscaleInitContainerResourcesClaims[];

  /**
   * Limits describes the maximum amount of compute resources allowed.
   * More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerResources#limits
   */
  readonly limits?: {
    [key: string]:
      ProxyClassSpecStatefulSetPodTailscaleInitContainerResourcesLimits;
  };

  /**
   * Requests describes the minimum amount of compute resources required.
   * If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
   * otherwise to an implementation-defined value. Requests cannot exceed Limits.
   * More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerResources#requests
   */
  readonly requests?: {
    [key: string]:
      ProxyClassSpecStatefulSetPodTailscaleInitContainerResourcesRequests;
  };
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodTailscaleInitContainerResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodTailscaleInitContainerResources(
  obj: ProxyClassSpecStatefulSetPodTailscaleInitContainerResources | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "claims": obj.claims?.map((y) =>
      toJson_ProxyClassSpecStatefulSetPodTailscaleInitContainerResourcesClaims(
        y,
      )
    ),
    "limits": ((obj.limits) === undefined)
      ? undefined
      : (Object.entries(obj.limits).reduce(
        (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }),
        {},
      )),
    "requests": ((obj.requests) === undefined)
      ? undefined
      : (Object.entries(obj.requests).reduce(
        (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }),
        {},
      )),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * Container security context.
 * Security context specified here will override the security context by the operator.
 * By default the operator:
 * - sets 'privileged: true' for the init container
 * - set NET_ADMIN capability for tailscale container for proxies that
 * are created for Services or Connector.
 * https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#security-context
 *
 * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContext
 */
export interface ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContext {
  /**
   * AllowPrivilegeEscalation controls whether a process can gain more
   * privileges than its parent process. This bool directly controls if
   * the no_new_privs flag will be set on the container process.
   * AllowPrivilegeEscalation is true always when the container is:
   * 1) run as Privileged
   * 2) has CAP_SYS_ADMIN
   * Note that this field cannot be set when spec.os.name is windows.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * appArmorProfile is the AppArmor options to use by this container. If set, this profile
   * overrides the pod's appArmorProfile.
   * Note that this field cannot be set when spec.os.name is windows.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContext#appArmorProfile
   */
  readonly appArmorProfile?:
    ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextAppArmorProfile;

  /**
   * The capabilities to add/drop when running containers.
   * Defaults to the default set of capabilities granted by the container runtime.
   * Note that this field cannot be set when spec.os.name is windows.
   *
   * @default the default set of capabilities granted by the container runtime.
   * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContext#capabilities
   */
  readonly capabilities?:
    ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextCapabilities;

  /**
   * Run container in privileged mode.
   * Processes in privileged containers are essentially equivalent to root on the host.
   * Defaults to false.
   * Note that this field cannot be set when spec.os.name is windows.
   *
   * @default false.
   * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * procMount denotes the type of proc mount to use for the containers.
   * The default is DefaultProcMount which uses the container runtime defaults for
   * readonly paths and masked paths.
   * This requires the ProcMountType feature flag to be enabled.
   * Note that this field cannot be set when spec.os.name is windows.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * Whether this container has a read-only root filesystem.
   * Default is false.
   * Note that this field cannot be set when spec.os.name is windows.
   *
   * @default false.
   * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * The GID to run the entrypoint of the container process.
   * Uses runtime default if unset.
   * May also be set in PodSecurityContext.  If set in both SecurityContext and
   * PodSecurityContext, the value specified in SecurityContext takes precedence.
   * Note that this field cannot be set when spec.os.name is windows.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * Indicates that the container must run as a non-root user.
   * If true, the Kubelet will validate the image at runtime to ensure that it
   * does not run as UID 0 (root) and fail to start the container if it does.
   * If unset or false, no such validation will be performed.
   * May also be set in PodSecurityContext.  If set in both SecurityContext and
   * PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * The UID to run the entrypoint of the container process.
   * Defaults to user specified in image metadata if unspecified.
   * May also be set in PodSecurityContext.  If set in both SecurityContext and
   * PodSecurityContext, the value specified in SecurityContext takes precedence.
   * Note that this field cannot be set when spec.os.name is windows.
   *
   * @default user specified in image metadata if unspecified.
   * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * The SELinux context to be applied to the container.
   * If unspecified, the container runtime will allocate a random SELinux context for each
   * container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
   * PodSecurityContext, the value specified in SecurityContext takes precedence.
   * Note that this field cannot be set when spec.os.name is windows.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?:
    ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextSeLinuxOptions;

  /**
   * The seccomp options to use by this container. If seccomp options are
   * provided at both the pod & container level, the container options
   * override the pod options.
   * Note that this field cannot be set when spec.os.name is windows.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContext#seccompProfile
   */
  readonly seccompProfile?:
    ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextSeccompProfile;

  /**
   * The Windows specific settings applied to all containers.
   * If unspecified, the options from the PodSecurityContext will be used.
   * If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   * Note that this field cannot be set when spec.os.name is linux.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContext#windowsOptions
   */
  readonly windowsOptions?:
    ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextWindowsOptions;
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContext(
  obj:
    | ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContext
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "allowPrivilegeEscalation": obj.allowPrivilegeEscalation,
    "appArmorProfile":
      toJson_ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextAppArmorProfile(
        obj.appArmorProfile,
      ),
    "capabilities":
      toJson_ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextCapabilities(
        obj.capabilities,
      ),
    "privileged": obj.privileged,
    "procMount": obj.procMount,
    "readOnlyRootFilesystem": obj.readOnlyRootFilesystem,
    "runAsGroup": obj.runAsGroup,
    "runAsNonRoot": obj.runAsNonRoot,
    "runAsUser": obj.runAsUser,
    "seLinuxOptions":
      toJson_ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextSeLinuxOptions(
        obj.seLinuxOptions,
      ),
    "seccompProfile":
      toJson_ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextSeccompProfile(
        obj.seccompProfile,
      ),
    "windowsOptions":
      toJson_ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextWindowsOptions(
        obj.windowsOptions,
      ),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * An empty preferred scheduling term matches all objects with implicit weight 0
 * (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
 *
 * @schema ProxyClassSpecStatefulSetPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface ProxyClassSpecStatefulSetPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * A node selector term, associated with the corresponding weight.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#preference
   */
  readonly preference:
    ProxyClassSpecStatefulSetPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;

  /**
   * Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution(
  obj:
    | ProxyClassSpecStatefulSetPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "preference":
      toJson_ProxyClassSpecStatefulSetPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference(
        obj.preference,
      ),
    "weight": obj.weight,
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * If the affinity requirements specified by this field are not met at
 * scheduling time, the pod will not be scheduled onto the node.
 * If the affinity requirements specified by this field cease to be met
 * at some point during pod execution (e.g. due to an update), the system
 * may or may not try to eventually evict the pod from its node.
 *
 * @schema ProxyClassSpecStatefulSetPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface ProxyClassSpecStatefulSetPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * Required. A list of node selector terms. The terms are ORed.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution#nodeSelectorTerms
   */
  readonly nodeSelectorTerms:
    ProxyClassSpecStatefulSetPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution(
  obj:
    | ProxyClassSpecStatefulSetPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "nodeSelectorTerms": obj.nodeSelectorTerms?.map((y) =>
      toJson_ProxyClassSpecStatefulSetPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms(
        y,
      )
    ),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
 *
 * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * Required. A pod affinity term, associated with the corresponding weight.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm:
    ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * weight associated with matching the corresponding podAffinityTerm,
   * in the range 1-100.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution(
  obj:
    | ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "podAffinityTerm":
      toJson_ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(
        obj.podAffinityTerm,
      ),
    "weight": obj.weight,
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * Defines a set of pods (namely those matching the labelSelector
 * relative to the given namespace(s)) that this pod should be
 * co-located (affinity) or not co-located (anti-affinity) with,
 * where co-located is defined as running on a node whose value of
 * the label with key <topologyKey> matches that of any node on which
 * a pod of the set of pods is running
 *
 * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * A label query over a set of resources, in this case pods.
   * If it's null, this PodAffinityTerm matches with no Pods.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?:
    ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * MatchLabelKeys is a set of pod label keys to select which pods will
   * be taken into consideration. The keys are used to lookup values from the
   * incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
   * to select the group of existing pods which pods will be taken into consideration
   * for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
   * pod labels will be ignored. The default value is empty.
   * The same key is forbidden to exist in both matchLabelKeys and labelSelector.
   * Also, matchLabelKeys cannot be set when labelSelector isn't set.
   * This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * MismatchLabelKeys is a set of pod label keys to select which pods will
   * be taken into consideration. The keys are used to lookup values from the
   * incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
   * to select the group of existing pods which pods will be taken into consideration
   * for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
   * pod labels will be ignored. The default value is empty.
   * The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
   * Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
   * This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#mismatchLabelKeys
   */
  readonly mismatchLabelKeys?: string[];

  /**
   * A label query over the set of namespaces that the term applies to.
   * The term is applied to the union of the namespaces selected by this field
   * and the ones listed in the namespaces field.
   * null selector and null or empty namespaces list means "this pod's namespace".
   * An empty selector ({}) matches all namespaces.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaceSelector
   */
  readonly namespaceSelector?:
    ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector;

  /**
   * namespaces specifies a static list of namespace names that the term applies to.
   * The term is applied to the union of the namespaces listed in this field
   * and the ones selected by namespaceSelector.
   * null or empty namespaces list and null namespaceSelector means "this pod's namespace".
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
   * the labelSelector in the specified namespaces, where co-located is defined as running on a node
   * whose value of the label with key topologyKey matches that of any node on which any of the
   * selected pods is running.
   * Empty topologyKey is not allowed.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution(
  obj:
    | ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "labelSelector":
      toJson_ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(
        obj.labelSelector,
      ),
    "matchLabelKeys": obj.matchLabelKeys?.map((y) => y),
    "mismatchLabelKeys": obj.mismatchLabelKeys?.map((y) => y),
    "namespaceSelector":
      toJson_ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(
        obj.namespaceSelector,
      ),
    "namespaces": obj.namespaces?.map((y) => y),
    "topologyKey": obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
 *
 * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * Required. A pod affinity term, associated with the corresponding weight.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm:
    ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * weight associated with matching the corresponding podAffinityTerm,
   * in the range 1-100.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution(
  obj:
    | ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "podAffinityTerm":
      toJson_ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(
        obj.podAffinityTerm,
      ),
    "weight": obj.weight,
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * Defines a set of pods (namely those matching the labelSelector
 * relative to the given namespace(s)) that this pod should be
 * co-located (affinity) or not co-located (anti-affinity) with,
 * where co-located is defined as running on a node whose value of
 * the label with key <topologyKey> matches that of any node on which
 * a pod of the set of pods is running
 *
 * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * A label query over a set of resources, in this case pods.
   * If it's null, this PodAffinityTerm matches with no Pods.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?:
    ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * MatchLabelKeys is a set of pod label keys to select which pods will
   * be taken into consideration. The keys are used to lookup values from the
   * incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
   * to select the group of existing pods which pods will be taken into consideration
   * for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
   * pod labels will be ignored. The default value is empty.
   * The same key is forbidden to exist in both matchLabelKeys and labelSelector.
   * Also, matchLabelKeys cannot be set when labelSelector isn't set.
   * This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * MismatchLabelKeys is a set of pod label keys to select which pods will
   * be taken into consideration. The keys are used to lookup values from the
   * incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
   * to select the group of existing pods which pods will be taken into consideration
   * for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
   * pod labels will be ignored. The default value is empty.
   * The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
   * Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
   * This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#mismatchLabelKeys
   */
  readonly mismatchLabelKeys?: string[];

  /**
   * A label query over the set of namespaces that the term applies to.
   * The term is applied to the union of the namespaces selected by this field
   * and the ones listed in the namespaces field.
   * null selector and null or empty namespaces list means "this pod's namespace".
   * An empty selector ({}) matches all namespaces.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaceSelector
   */
  readonly namespaceSelector?:
    ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector;

  /**
   * namespaces specifies a static list of namespace names that the term applies to.
   * The term is applied to the union of the namespaces listed in this field
   * and the ones selected by namespaceSelector.
   * null or empty namespaces list and null namespaceSelector means "this pod's namespace".
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
   * the labelSelector in the specified namespaces, where co-located is defined as running on a node
   * whose value of the label with key topologyKey matches that of any node on which any of the
   * selected pods is running.
   * Empty topologyKey is not allowed.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution(
  obj:
    | ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "labelSelector":
      toJson_ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(
        obj.labelSelector,
      ),
    "matchLabelKeys": obj.matchLabelKeys?.map((y) => y),
    "mismatchLabelKeys": obj.mismatchLabelKeys?.map((y) => y),
    "namespaceSelector":
      toJson_ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(
        obj.namespaceSelector,
      ),
    "namespaces": obj.namespaces?.map((y) => y),
    "topologyKey": obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * ResourceClaim references one entry in PodSpec.ResourceClaims.
 *
 * @schema ProxyClassSpecStatefulSetPodTailscaleContainerResourcesClaims
 */
export interface ProxyClassSpecStatefulSetPodTailscaleContainerResourcesClaims {
  /**
   * Name must match the name of one entry in pod.spec.resourceClaims of
   * the Pod where this field is used. It makes that resource available
   * inside a container.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleContainerResourcesClaims#name
   */
  readonly name: string;
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodTailscaleContainerResourcesClaims' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodTailscaleContainerResourcesClaims(
  obj:
    | ProxyClassSpecStatefulSetPodTailscaleContainerResourcesClaims
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "name": obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * @schema ProxyClassSpecStatefulSetPodTailscaleContainerResourcesLimits
 */
export class ProxyClassSpecStatefulSetPodTailscaleContainerResourcesLimits {
  public static fromNumber(
    value: number,
  ): ProxyClassSpecStatefulSetPodTailscaleContainerResourcesLimits {
    return new ProxyClassSpecStatefulSetPodTailscaleContainerResourcesLimits(
      value,
    );
  }
  public static fromString(
    value: string,
  ): ProxyClassSpecStatefulSetPodTailscaleContainerResourcesLimits {
    return new ProxyClassSpecStatefulSetPodTailscaleContainerResourcesLimits(
      value,
    );
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema ProxyClassSpecStatefulSetPodTailscaleContainerResourcesRequests
 */
export class ProxyClassSpecStatefulSetPodTailscaleContainerResourcesRequests {
  public static fromNumber(
    value: number,
  ): ProxyClassSpecStatefulSetPodTailscaleContainerResourcesRequests {
    return new ProxyClassSpecStatefulSetPodTailscaleContainerResourcesRequests(
      value,
    );
  }
  public static fromString(
    value: string,
  ): ProxyClassSpecStatefulSetPodTailscaleContainerResourcesRequests {
    return new ProxyClassSpecStatefulSetPodTailscaleContainerResourcesRequests(
      value,
    );
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * appArmorProfile is the AppArmor options to use by this container. If set, this profile
 * overrides the pod's appArmorProfile.
 * Note that this field cannot be set when spec.os.name is windows.
 *
 * @schema ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextAppArmorProfile
 */
export interface ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextAppArmorProfile {
  /**
   * localhostProfile indicates a profile loaded on the node that should be used.
   * The profile must be preconfigured on the node to work.
   * Must match the loaded name of the profile.
   * Must be set if and only if type is "Localhost".
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextAppArmorProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * type indicates which kind of AppArmor profile will be applied.
   * Valid options are:
   * Localhost - a profile pre-loaded on the node.
   * RuntimeDefault - the container runtime's default profile.
   * Unconfined - no AppArmor enforcement.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextAppArmorProfile#type
   */
  readonly type: string;
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextAppArmorProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextAppArmorProfile(
  obj:
    | ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextAppArmorProfile
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "localhostProfile": obj.localhostProfile,
    "type": obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * The capabilities to add/drop when running containers.
 * Defaults to the default set of capabilities granted by the container runtime.
 * Note that this field cannot be set when spec.os.name is windows.
 *
 * @default the default set of capabilities granted by the container runtime.
 * @schema ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextCapabilities
 */
export interface ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextCapabilities {
  /**
   * Added capabilities
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * Removed capabilities
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextCapabilities#drop
   */
  readonly drop?: string[];
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextCapabilities' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextCapabilities(
  obj:
    | ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextCapabilities
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "add": obj.add?.map((y) => y),
    "drop": obj.drop?.map((y) => y),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * The SELinux context to be applied to the container.
 * If unspecified, the container runtime will allocate a random SELinux context for each
 * container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
 * PodSecurityContext, the value specified in SecurityContext takes precedence.
 * Note that this field cannot be set when spec.os.name is windows.
 *
 * @schema ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextSeLinuxOptions
 */
export interface ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextSeLinuxOptions {
  /**
   * Level is SELinux level label that applies to the container.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * Role is a SELinux role label that applies to the container.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * Type is a SELinux type label that applies to the container.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * User is a SELinux user label that applies to the container.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextSeLinuxOptions(
  obj:
    | ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextSeLinuxOptions
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "level": obj.level,
    "role": obj.role,
    "type": obj.type,
    "user": obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * The seccomp options to use by this container. If seccomp options are
 * provided at both the pod & container level, the container options
 * override the pod options.
 * Note that this field cannot be set when spec.os.name is windows.
 *
 * @schema ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextSeccompProfile
 */
export interface ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextSeccompProfile {
  /**
   * localhostProfile indicates a profile defined in a file on the node should be used.
   * The profile must be preconfigured on the node to work.
   * Must be a descending path, relative to the kubelet's configured seccomp profile location.
   * Must be set if type is "Localhost". Must NOT be set for any other type.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * type indicates which kind of seccomp profile will be applied.
   * Valid options are:
   *
   * Localhost - a profile defined in a file on the node should be used.
   * RuntimeDefault - the container runtime default profile should be used.
   * Unconfined - no profile should be applied.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextSeccompProfile#type
   */
  readonly type: string;
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextSeccompProfile(
  obj:
    | ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextSeccompProfile
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "localhostProfile": obj.localhostProfile,
    "type": obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * The Windows specific settings applied to all containers.
 * If unspecified, the options from the PodSecurityContext will be used.
 * If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
 * Note that this field cannot be set when spec.os.name is linux.
 *
 * @schema ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextWindowsOptions
 */
export interface ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextWindowsOptions {
  /**
   * GMSACredentialSpec is where the GMSA admission webhook
   * (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
   * GMSA credential spec named by the GMSACredentialSpecName field.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * GMSACredentialSpecName is the name of the GMSA credential spec to use.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * HostProcess determines if a container should be run as a 'Host Process' container.
   * All of a Pod's containers must have the same effective HostProcess value
   * (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
   * In addition, if HostProcess is true then HostNetwork must also be set to true.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * The UserName in Windows to run the entrypoint of the container process.
   * Defaults to the user specified in image metadata if unspecified.
   * May also be set in PodSecurityContext. If set in both SecurityContext and
   * PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @default the user specified in image metadata if unspecified.
   * @schema ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextWindowsOptions(
  obj:
    | ProxyClassSpecStatefulSetPodTailscaleContainerSecurityContextWindowsOptions
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "gmsaCredentialSpec": obj.gmsaCredentialSpec,
    "gmsaCredentialSpecName": obj.gmsaCredentialSpecName,
    "hostProcess": obj.hostProcess,
    "runAsUserName": obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * ResourceClaim references one entry in PodSpec.ResourceClaims.
 *
 * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerResourcesClaims
 */
export interface ProxyClassSpecStatefulSetPodTailscaleInitContainerResourcesClaims {
  /**
   * Name must match the name of one entry in pod.spec.resourceClaims of
   * the Pod where this field is used. It makes that resource available
   * inside a container.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerResourcesClaims#name
   */
  readonly name: string;
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodTailscaleInitContainerResourcesClaims' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodTailscaleInitContainerResourcesClaims(
  obj:
    | ProxyClassSpecStatefulSetPodTailscaleInitContainerResourcesClaims
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "name": obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerResourcesLimits
 */
export class ProxyClassSpecStatefulSetPodTailscaleInitContainerResourcesLimits {
  public static fromNumber(
    value: number,
  ): ProxyClassSpecStatefulSetPodTailscaleInitContainerResourcesLimits {
    return new ProxyClassSpecStatefulSetPodTailscaleInitContainerResourcesLimits(
      value,
    );
  }
  public static fromString(
    value: string,
  ): ProxyClassSpecStatefulSetPodTailscaleInitContainerResourcesLimits {
    return new ProxyClassSpecStatefulSetPodTailscaleInitContainerResourcesLimits(
      value,
    );
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerResourcesRequests
 */
export class ProxyClassSpecStatefulSetPodTailscaleInitContainerResourcesRequests {
  public static fromNumber(
    value: number,
  ): ProxyClassSpecStatefulSetPodTailscaleInitContainerResourcesRequests {
    return new ProxyClassSpecStatefulSetPodTailscaleInitContainerResourcesRequests(
      value,
    );
  }
  public static fromString(
    value: string,
  ): ProxyClassSpecStatefulSetPodTailscaleInitContainerResourcesRequests {
    return new ProxyClassSpecStatefulSetPodTailscaleInitContainerResourcesRequests(
      value,
    );
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * appArmorProfile is the AppArmor options to use by this container. If set, this profile
 * overrides the pod's appArmorProfile.
 * Note that this field cannot be set when spec.os.name is windows.
 *
 * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextAppArmorProfile
 */
export interface ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextAppArmorProfile {
  /**
   * localhostProfile indicates a profile loaded on the node that should be used.
   * The profile must be preconfigured on the node to work.
   * Must match the loaded name of the profile.
   * Must be set if and only if type is "Localhost".
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextAppArmorProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * type indicates which kind of AppArmor profile will be applied.
   * Valid options are:
   * Localhost - a profile pre-loaded on the node.
   * RuntimeDefault - the container runtime's default profile.
   * Unconfined - no AppArmor enforcement.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextAppArmorProfile#type
   */
  readonly type: string;
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextAppArmorProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextAppArmorProfile(
  obj:
    | ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextAppArmorProfile
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "localhostProfile": obj.localhostProfile,
    "type": obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * The capabilities to add/drop when running containers.
 * Defaults to the default set of capabilities granted by the container runtime.
 * Note that this field cannot be set when spec.os.name is windows.
 *
 * @default the default set of capabilities granted by the container runtime.
 * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextCapabilities
 */
export interface ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextCapabilities {
  /**
   * Added capabilities
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * Removed capabilities
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextCapabilities#drop
   */
  readonly drop?: string[];
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextCapabilities' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextCapabilities(
  obj:
    | ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextCapabilities
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "add": obj.add?.map((y) => y),
    "drop": obj.drop?.map((y) => y),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * The SELinux context to be applied to the container.
 * If unspecified, the container runtime will allocate a random SELinux context for each
 * container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
 * PodSecurityContext, the value specified in SecurityContext takes precedence.
 * Note that this field cannot be set when spec.os.name is windows.
 *
 * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextSeLinuxOptions
 */
export interface ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextSeLinuxOptions {
  /**
   * Level is SELinux level label that applies to the container.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * Role is a SELinux role label that applies to the container.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * Type is a SELinux type label that applies to the container.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * User is a SELinux user label that applies to the container.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextSeLinuxOptions(
  obj:
    | ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextSeLinuxOptions
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "level": obj.level,
    "role": obj.role,
    "type": obj.type,
    "user": obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * The seccomp options to use by this container. If seccomp options are
 * provided at both the pod & container level, the container options
 * override the pod options.
 * Note that this field cannot be set when spec.os.name is windows.
 *
 * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextSeccompProfile
 */
export interface ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextSeccompProfile {
  /**
   * localhostProfile indicates a profile defined in a file on the node should be used.
   * The profile must be preconfigured on the node to work.
   * Must be a descending path, relative to the kubelet's configured seccomp profile location.
   * Must be set if type is "Localhost". Must NOT be set for any other type.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * type indicates which kind of seccomp profile will be applied.
   * Valid options are:
   *
   * Localhost - a profile defined in a file on the node should be used.
   * RuntimeDefault - the container runtime default profile should be used.
   * Unconfined - no profile should be applied.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextSeccompProfile#type
   */
  readonly type: string;
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextSeccompProfile(
  obj:
    | ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextSeccompProfile
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "localhostProfile": obj.localhostProfile,
    "type": obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * The Windows specific settings applied to all containers.
 * If unspecified, the options from the PodSecurityContext will be used.
 * If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
 * Note that this field cannot be set when spec.os.name is linux.
 *
 * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextWindowsOptions
 */
export interface ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextWindowsOptions {
  /**
   * GMSACredentialSpec is where the GMSA admission webhook
   * (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
   * GMSA credential spec named by the GMSACredentialSpecName field.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * GMSACredentialSpecName is the name of the GMSA credential spec to use.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * HostProcess determines if a container should be run as a 'Host Process' container.
   * All of a Pod's containers must have the same effective HostProcess value
   * (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
   * In addition, if HostProcess is true then HostNetwork must also be set to true.
   *
   * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * The UserName in Windows to run the entrypoint of the container process.
   * Defaults to the user specified in image metadata if unspecified.
   * May also be set in PodSecurityContext. If set in both SecurityContext and
   * PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @default the user specified in image metadata if unspecified.
   * @schema ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextWindowsOptions(
  obj:
    | ProxyClassSpecStatefulSetPodTailscaleInitContainerSecurityContextWindowsOptions
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "gmsaCredentialSpec": obj.gmsaCredentialSpec,
    "gmsaCredentialSpecName": obj.gmsaCredentialSpecName,
    "hostProcess": obj.hostProcess,
    "runAsUserName": obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * A node selector term, associated with the corresponding weight.
 *
 * @schema ProxyClassSpecStatefulSetPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference
 */
export interface ProxyClassSpecStatefulSetPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
  /**
   * A list of node selector requirements by node's labels.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchExpressions
   */
  readonly matchExpressions?:
    ProxyClassSpecStatefulSetPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];

  /**
   * A list of node selector requirements by node's fields.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchFields
   */
  readonly matchFields?:
    ProxyClassSpecStatefulSetPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference(
  obj:
    | ProxyClassSpecStatefulSetPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "matchExpressions": obj.matchExpressions?.map((y) =>
      toJson_ProxyClassSpecStatefulSetPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions(
        y,
      )
    ),
    "matchFields": obj.matchFields?.map((y) =>
      toJson_ProxyClassSpecStatefulSetPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields(
        y,
      )
    ),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * A null or empty node selector term matches no objects. The requirements of
 * them are ANDed.
 * The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
 *
 * @schema ProxyClassSpecStatefulSetPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms
 */
export interface ProxyClassSpecStatefulSetPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
  /**
   * A list of node selector requirements by node's labels.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchExpressions
   */
  readonly matchExpressions?:
    ProxyClassSpecStatefulSetPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];

  /**
   * A list of node selector requirements by node's fields.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchFields
   */
  readonly matchFields?:
    ProxyClassSpecStatefulSetPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms(
  obj:
    | ProxyClassSpecStatefulSetPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "matchExpressions": obj.matchExpressions?.map((y) =>
      toJson_ProxyClassSpecStatefulSetPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions(
        y,
      )
    ),
    "matchFields": obj.matchFields?.map((y) =>
      toJson_ProxyClassSpecStatefulSetPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields(
        y,
      )
    ),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * Required. A pod affinity term, associated with the corresponding weight.
 *
 * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * A label query over a set of resources, in this case pods.
   * If it's null, this PodAffinityTerm matches with no Pods.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?:
    ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * MatchLabelKeys is a set of pod label keys to select which pods will
   * be taken into consideration. The keys are used to lookup values from the
   * incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
   * to select the group of existing pods which pods will be taken into consideration
   * for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
   * pod labels will be ignored. The default value is empty.
   * The same key is forbidden to exist in both matchLabelKeys and labelSelector.
   * Also, matchLabelKeys cannot be set when labelSelector isn't set.
   * This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * MismatchLabelKeys is a set of pod label keys to select which pods will
   * be taken into consideration. The keys are used to lookup values from the
   * incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
   * to select the group of existing pods which pods will be taken into consideration
   * for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
   * pod labels will be ignored. The default value is empty.
   * The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
   * Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
   * This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#mismatchLabelKeys
   */
  readonly mismatchLabelKeys?: string[];

  /**
   * A label query over the set of namespaces that the term applies to.
   * The term is applied to the union of the namespaces selected by this field
   * and the ones listed in the namespaces field.
   * null selector and null or empty namespaces list means "this pod's namespace".
   * An empty selector ({}) matches all namespaces.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaceSelector
   */
  readonly namespaceSelector?:
    ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector;

  /**
   * namespaces specifies a static list of namespace names that the term applies to.
   * The term is applied to the union of the namespaces listed in this field
   * and the ones selected by namespaceSelector.
   * null or empty namespaces list and null namespaceSelector means "this pod's namespace".
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
   * the labelSelector in the specified namespaces, where co-located is defined as running on a node
   * whose value of the label with key topologyKey matches that of any node on which any of the
   * selected pods is running.
   * Empty topologyKey is not allowed.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(
  obj:
    | ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "labelSelector":
      toJson_ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(
        obj.labelSelector,
      ),
    "matchLabelKeys": obj.matchLabelKeys?.map((y) => y),
    "mismatchLabelKeys": obj.mismatchLabelKeys?.map((y) => y),
    "namespaceSelector":
      toJson_ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(
        obj.namespaceSelector,
      ),
    "namespaces": obj.namespaces?.map((y) => y),
    "topologyKey": obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * A label query over a set of resources, in this case pods.
 * If it's null, this PodAffinityTerm matches with no Pods.
 *
 * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?:
    ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
   * map is equivalent to an element of matchExpressions, whose key field is "key", the
   * operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(
  obj:
    | ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "matchExpressions": obj.matchExpressions?.map((y) =>
      toJson_ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(
        y,
      )
    ),
    "matchLabels": ((obj.matchLabels) === undefined)
      ? undefined
      : (Object.entries(obj.matchLabels).reduce(
        (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
        {},
      )),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * A label query over the set of namespaces that the term applies to.
 * The term is applied to the union of the namespaces selected by this field
 * and the ones listed in the namespaces field.
 * null selector and null or empty namespaces list means "this pod's namespace".
 * An empty selector ({}) matches all namespaces.
 *
 * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector
 */
export interface ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?:
    ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
   * map is equivalent to an element of matchExpressions, whose key field is "key", the
   * operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(
  obj:
    | ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "matchExpressions": obj.matchExpressions?.map((y) =>
      toJson_ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(
        y,
      )
    ),
    "matchLabels": ((obj.matchLabels) === undefined)
      ? undefined
      : (Object.entries(obj.matchLabels).reduce(
        (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
        {},
      )),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * Required. A pod affinity term, associated with the corresponding weight.
 *
 * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * A label query over a set of resources, in this case pods.
   * If it's null, this PodAffinityTerm matches with no Pods.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?:
    ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * MatchLabelKeys is a set of pod label keys to select which pods will
   * be taken into consideration. The keys are used to lookup values from the
   * incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
   * to select the group of existing pods which pods will be taken into consideration
   * for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
   * pod labels will be ignored. The default value is empty.
   * The same key is forbidden to exist in both matchLabelKeys and labelSelector.
   * Also, matchLabelKeys cannot be set when labelSelector isn't set.
   * This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * MismatchLabelKeys is a set of pod label keys to select which pods will
   * be taken into consideration. The keys are used to lookup values from the
   * incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
   * to select the group of existing pods which pods will be taken into consideration
   * for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
   * pod labels will be ignored. The default value is empty.
   * The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
   * Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
   * This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#mismatchLabelKeys
   */
  readonly mismatchLabelKeys?: string[];

  /**
   * A label query over the set of namespaces that the term applies to.
   * The term is applied to the union of the namespaces selected by this field
   * and the ones listed in the namespaces field.
   * null selector and null or empty namespaces list means "this pod's namespace".
   * An empty selector ({}) matches all namespaces.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaceSelector
   */
  readonly namespaceSelector?:
    ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector;

  /**
   * namespaces specifies a static list of namespace names that the term applies to.
   * The term is applied to the union of the namespaces listed in this field
   * and the ones selected by namespaceSelector.
   * null or empty namespaces list and null namespaceSelector means "this pod's namespace".
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
   * the labelSelector in the specified namespaces, where co-located is defined as running on a node
   * whose value of the label with key topologyKey matches that of any node on which any of the
   * selected pods is running.
   * Empty topologyKey is not allowed.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(
  obj:
    | ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "labelSelector":
      toJson_ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(
        obj.labelSelector,
      ),
    "matchLabelKeys": obj.matchLabelKeys?.map((y) => y),
    "mismatchLabelKeys": obj.mismatchLabelKeys?.map((y) => y),
    "namespaceSelector":
      toJson_ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(
        obj.namespaceSelector,
      ),
    "namespaces": obj.namespaces?.map((y) => y),
    "topologyKey": obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * A label query over a set of resources, in this case pods.
 * If it's null, this PodAffinityTerm matches with no Pods.
 *
 * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?:
    ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
   * map is equivalent to an element of matchExpressions, whose key field is "key", the
   * operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(
  obj:
    | ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "matchExpressions": obj.matchExpressions?.map((y) =>
      toJson_ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(
        y,
      )
    ),
    "matchLabels": ((obj.matchLabels) === undefined)
      ? undefined
      : (Object.entries(obj.matchLabels).reduce(
        (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
        {},
      )),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * A label query over the set of namespaces that the term applies to.
 * The term is applied to the union of the namespaces selected by this field
 * and the ones listed in the namespaces field.
 * null selector and null or empty namespaces list means "this pod's namespace".
 * An empty selector ({}) matches all namespaces.
 *
 * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector
 */
export interface ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?:
    ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
   * map is equivalent to an element of matchExpressions, whose key field is "key", the
   * operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(
  obj:
    | ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "matchExpressions": obj.matchExpressions?.map((y) =>
      toJson_ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(
        y,
      )
    ),
    "matchLabels": ((obj.matchLabels) === undefined)
      ? undefined
      : (Object.entries(obj.matchLabels).reduce(
        (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
        {},
      )),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * A node selector requirement is a selector that contains values, a key, and an operator
 * that relates the key and values.
 *
 * @schema ProxyClassSpecStatefulSetPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions
 */
export interface ProxyClassSpecStatefulSetPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
  /**
   * The label key that the selector applies to.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#key
   */
  readonly key: string;

  /**
   * Represents a key's relationship to a set of values.
   * Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * An array of string values. If the operator is In or NotIn,
   * the values array must be non-empty. If the operator is Exists or DoesNotExist,
   * the values array must be empty. If the operator is Gt or Lt, the values
   * array must have a single element, which will be interpreted as an integer.
   * This array is replaced during a strategic merge patch.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#values
   */
  readonly values?: string[];
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions(
  obj:
    | ProxyClassSpecStatefulSetPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "key": obj.key,
    "operator": obj.operator,
    "values": obj.values?.map((y) => y),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * A node selector requirement is a selector that contains values, a key, and an operator
 * that relates the key and values.
 *
 * @schema ProxyClassSpecStatefulSetPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields
 */
export interface ProxyClassSpecStatefulSetPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
  /**
   * The label key that the selector applies to.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#key
   */
  readonly key: string;

  /**
   * Represents a key's relationship to a set of values.
   * Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#operator
   */
  readonly operator: string;

  /**
   * An array of string values. If the operator is In or NotIn,
   * the values array must be non-empty. If the operator is Exists or DoesNotExist,
   * the values array must be empty. If the operator is Gt or Lt, the values
   * array must have a single element, which will be interpreted as an integer.
   * This array is replaced during a strategic merge patch.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#values
   */
  readonly values?: string[];
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields(
  obj:
    | ProxyClassSpecStatefulSetPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "key": obj.key,
    "operator": obj.operator,
    "values": obj.values?.map((y) => y),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * A node selector requirement is a selector that contains values, a key, and an operator
 * that relates the key and values.
 *
 * @schema ProxyClassSpecStatefulSetPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions
 */
export interface ProxyClassSpecStatefulSetPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
  /**
   * The label key that the selector applies to.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#key
   */
  readonly key: string;

  /**
   * Represents a key's relationship to a set of values.
   * Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * An array of string values. If the operator is In or NotIn,
   * the values array must be non-empty. If the operator is Exists or DoesNotExist,
   * the values array must be empty. If the operator is Gt or Lt, the values
   * array must have a single element, which will be interpreted as an integer.
   * This array is replaced during a strategic merge patch.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#values
   */
  readonly values?: string[];
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions(
  obj:
    | ProxyClassSpecStatefulSetPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "key": obj.key,
    "operator": obj.operator,
    "values": obj.values?.map((y) => y),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * A node selector requirement is a selector that contains values, a key, and an operator
 * that relates the key and values.
 *
 * @schema ProxyClassSpecStatefulSetPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields
 */
export interface ProxyClassSpecStatefulSetPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
  /**
   * The label key that the selector applies to.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#key
   */
  readonly key: string;

  /**
   * Represents a key's relationship to a set of values.
   * Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#operator
   */
  readonly operator: string;

  /**
   * An array of string values. If the operator is In or NotIn,
   * the values array must be non-empty. If the operator is Exists or DoesNotExist,
   * the values array must be empty. If the operator is Gt or Lt, the values
   * array must have a single element, which will be interpreted as an integer.
   * This array is replaced during a strategic merge patch.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#values
   */
  readonly values?: string[];
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields(
  obj:
    | ProxyClassSpecStatefulSetPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "key": obj.key,
    "operator": obj.operator,
    "values": obj.values?.map((y) => y),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * A label query over a set of resources, in this case pods.
 * If it's null, this PodAffinityTerm matches with no Pods.
 *
 * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?:
    ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
   * map is equivalent to an element of matchExpressions, whose key field is "key", the
   * operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(
  obj:
    | ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "matchExpressions": obj.matchExpressions?.map((y) =>
      toJson_ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(
        y,
      )
    ),
    "matchLabels": ((obj.matchLabels) === undefined)
      ? undefined
      : (Object.entries(obj.matchLabels).reduce(
        (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
        {},
      )),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * A label query over the set of namespaces that the term applies to.
 * The term is applied to the union of the namespaces selected by this field
 * and the ones listed in the namespaces field.
 * null selector and null or empty namespaces list means "this pod's namespace".
 * An empty selector ({}) matches all namespaces.
 *
 * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector
 */
export interface ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?:
    ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
   * map is equivalent to an element of matchExpressions, whose key field is "key", the
   * operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(
  obj:
    | ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "matchExpressions": obj.matchExpressions?.map((y) =>
      toJson_ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(
        y,
      )
    ),
    "matchLabels": ((obj.matchLabels) === undefined)
      ? undefined
      : (Object.entries(obj.matchLabels).reduce(
        (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
        {},
      )),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that
 * relates the key and values.
 *
 * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values.
   * Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn,
   * the values array must be non-empty. If the operator is Exists or DoesNotExist,
   * the values array must be empty. This array is replaced during a strategic
   * merge patch.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(
  obj:
    | ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "key": obj.key,
    "operator": obj.operator,
    "values": obj.values?.map((y) => y),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that
 * relates the key and values.
 *
 * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions
 */
export interface ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values.
   * Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn,
   * the values array must be non-empty. If the operator is Exists or DoesNotExist,
   * the values array must be empty. This array is replaced during a strategic
   * merge patch.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(
  obj:
    | ProxyClassSpecStatefulSetPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "key": obj.key,
    "operator": obj.operator,
    "values": obj.values?.map((y) => y),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * A label query over a set of resources, in this case pods.
 * If it's null, this PodAffinityTerm matches with no Pods.
 *
 * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?:
    ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
   * map is equivalent to an element of matchExpressions, whose key field is "key", the
   * operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(
  obj:
    | ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "matchExpressions": obj.matchExpressions?.map((y) =>
      toJson_ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(
        y,
      )
    ),
    "matchLabels": ((obj.matchLabels) === undefined)
      ? undefined
      : (Object.entries(obj.matchLabels).reduce(
        (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
        {},
      )),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * A label query over the set of namespaces that the term applies to.
 * The term is applied to the union of the namespaces selected by this field
 * and the ones listed in the namespaces field.
 * null selector and null or empty namespaces list means "this pod's namespace".
 * An empty selector ({}) matches all namespaces.
 *
 * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector
 */
export interface ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?:
    ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
   * map is equivalent to an element of matchExpressions, whose key field is "key", the
   * operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(
  obj:
    | ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "matchExpressions": obj.matchExpressions?.map((y) =>
      toJson_ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(
        y,
      )
    ),
    "matchLabels": ((obj.matchLabels) === undefined)
      ? undefined
      : (Object.entries(obj.matchLabels).reduce(
        (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
        {},
      )),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that
 * relates the key and values.
 *
 * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values.
   * Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn,
   * the values array must be non-empty. If the operator is Exists or DoesNotExist,
   * the values array must be empty. This array is replaced during a strategic
   * merge patch.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(
  obj:
    | ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "key": obj.key,
    "operator": obj.operator,
    "values": obj.values?.map((y) => y),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that
 * relates the key and values.
 *
 * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions
 */
export interface ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values.
   * Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn,
   * the values array must be non-empty. If the operator is Exists or DoesNotExist,
   * the values array must be empty. This array is replaced during a strategic
   * merge patch.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(
  obj:
    | ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "key": obj.key,
    "operator": obj.operator,
    "values": obj.values?.map((y) => y),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that
 * relates the key and values.
 *
 * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values.
   * Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn,
   * the values array must be non-empty. If the operator is Exists or DoesNotExist,
   * the values array must be empty. This array is replaced during a strategic
   * merge patch.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(
  obj:
    | ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "key": obj.key,
    "operator": obj.operator,
    "values": obj.values?.map((y) => y),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that
 * relates the key and values.
 *
 * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions
 */
export interface ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values.
   * Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn,
   * the values array must be non-empty. If the operator is Exists or DoesNotExist,
   * the values array must be empty. This array is replaced during a strategic
   * merge patch.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(
  obj:
    | ProxyClassSpecStatefulSetPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "key": obj.key,
    "operator": obj.operator,
    "values": obj.values?.map((y) => y),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that
 * relates the key and values.
 *
 * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values.
   * Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn,
   * the values array must be non-empty. If the operator is Exists or DoesNotExist,
   * the values array must be empty. This array is replaced during a strategic
   * merge patch.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(
  obj:
    | ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "key": obj.key,
    "operator": obj.operator,
    "values": obj.values?.map((y) => y),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that
 * relates the key and values.
 *
 * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions
 */
export interface ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values.
   * Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn,
   * the values array must be non-empty. If the operator is Exists or DoesNotExist,
   * the values array must be empty. This array is replaced during a strategic
   * merge patch.
   *
   * @schema ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];
}

/**
 * Converts an object of type 'ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(
  obj:
    | ProxyClassSpecStatefulSetPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions
    | undefined,
): Record<string, any> | undefined {
  if (obj === undefined) return undefined;
  const result = {
    "key": obj.key,
    "operator": obj.operator,
    "values": obj.values?.map((y) => y),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }),
    {},
  );
}
/* eslint-enable max-len, quote-props */
