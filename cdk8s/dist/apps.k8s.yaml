apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: 1password
  namespace: argocd
spec:
  destination:
    namespace: 1password
    server: https://kubernetes.default.svc
  project: default
  source:
    chart: connect
    helm:
      parameters:
        - name: operator.autoRestart
          value: "true"
        - name: operator.create
          value: "true"
        - name: operator.pollingInterval
          value: "60"
    repoURL: https://1password.github.io/connect-helm-charts/
    targetRevision: 1.14.0
  syncPolicy:
    automated: {}
    syncOptions:
      - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argocd
  namespace: argocd
spec:
  destination:
    namespace: argocd
    server: https://kubernetes.default.svc
  project: default
  source:
    path: manifests/
    repoURL: https://github.com/argoproj/argo-cd
    targetRevision: stable
  syncPolicy:
    automated: {}
    syncOptions:
      - CreateNamespace=true
---
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  name: operator-oauth
  namespace: tailscale
spec:
  itemPath: vaults/v64ocnykdqju4ui6j6pua56xw4/items/mboftvs4fyptyqvg3anrfjy6vu
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: tailscale
  namespace: argocd
spec:
  destination:
    namespace: tailscale
    server: https://kubernetes.default.svc
  project: default
  source:
    path: cmd/k8s-operator/deploy/chart
    repoURL: https://github.com/tailscale/tailscale
    targetRevision: HEAD
  syncPolicy:
    automated: {}
    syncOptions:
      - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: lamport
  namespace: argocd
spec:
  destination:
    namespace: lamport
    server: https://kubernetes.default.svc
  project: default
  source:
    path: cdk8s/dist/
    repoURL: https://github.com/shepherdjerred/servers
    targetRevision: main
  syncPolicy:
    automated: {}
    syncOptions:
      - CreateNamespace=true
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: immich-volume
  namespace: argocd
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apps-immich
  namespace: argocd
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: apps-immich-c81dad19
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: apps-immich-c81dad19
    spec:
      automountServiceAccountToken: false
      containers:
        - image: ubuntu
          imagePullPolicy: Always
          name: ubuntu
          resources:
            limits:
              cpu: 1500m
              memory: 2048Mi
            requests:
              cpu: 1000m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          volumeMounts:
            - mountPath: /config
              name: pvc-immich-volume
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
      volumes:
        - name: pvc-immich-volume
          persistentVolumeClaim:
            claimName: immich-volume
            readOnly: false
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: immich
  namespace: argocd
spec:
  destination:
    namespace: immich
    server: https://kubernetes.default.svc
  project: default
  source:
    helm:
      parameters:
        - name: postgresql.enabled
          value: "true"
        - name: redis.enabled
          value: "true"
        - name: immich.persistence.library.existingClaim
          value: immich-volume
    path: charts/immich
    repoURL: https://github.com/immich-app/immich-charts/
    targetRevision: immich-0.3.1
  syncPolicy:
    automated: {}
    syncOptions:
      - CreateNamespace=true
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-volume
  namespace: argocd
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus
  namespace: argocd
spec:
  destination:
    namespace: prometheus
    server: https://kubernetes.default.svc
  project: default
  source:
    chart: kube-prometheus-stack
    helm:
      parameters:
        - name: grafana.persistence.library.existingClaim
          value: prometheus-volume
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 56.6.2
  syncPolicy:
    automated: {}
    syncOptions:
      - CreateNamespace=true
