apiVersion: v1
kind: Namespace
metadata:
  name: glitter-boys-beta
  namespace: lamport
---
apiVersion: v1
kind: Namespace
metadata:
  name: glitter-boys-prod
  namespace: lamport
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lamport-esphome
  namespace: lamport
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: lamport-esphome-c87859eb
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: lamport-esphome-c87859eb
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: TZ
              value: America/Los_Angeles
          image: esphome/esphome:2024.5.0@sha256:917bf34d17c54f64914b5a3a9a320c59272ee4690411299ff447dc6bafdff527
          imagePullPolicy: Always
          name: main
          ports:
            - containerPort: 6052
              name: port-6052-web
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
          volumeMounts:
            - mountPath: /config
              name: pvc-esphome-pvc
      dnsPolicy: ClusterFirst
      hostNetwork: true
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
      volumes:
        - name: pvc-esphome-pvc
          persistentVolumeClaim:
            claimName: esphome-pvc
            readOnly: false
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: esphome-pvc
  namespace: lamport
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem
---
apiVersion: v1
kind: Service
metadata:
  name: lamport-esphome-service
  namespace: lamport
spec:
  externalIPs: []
  ports:
    - port: 6052
  selector:
    cdk8s.io/metadata.addr: lamport-esphome-c87859eb
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    tailscale.com/funnel: "true"
  name: lamport-esphome-tailscale-ingress-ingress
  namespace: lamport
spec:
  defaultBackend:
    service:
      name: lamport-esphome-service
      port:
        number: 6052
  ingressClassName: tailscale
  tls:
    - hosts:
        - esphome
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lamport-bazarr
  namespace: lamport
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: lamport-bazarr-c8584962
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: lamport-bazarr-c8584962
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: TZ
              value: ""
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
          image: ghcr.io/linuxserver/bazarr:1.4.2@sha256:b10948cb32e293afd0278074b8bde922dbffb5ebe9da72434c7525d4abb5f145
          imagePullPolicy: Always
          name: main
          ports:
            - containerPort: 6767
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
          startupProbe:
            failureThreshold: 3
            tcpSocket:
              port: 6767
          volumeMounts:
            - mountPath: /config
              name: pvc-bazarr-pvc
            - mountPath: /movies
              name: bazarr-movies-bind-mount
            - mountPath: /tv
              name: bazarr-tv-bind-mount
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
      volumes:
        - name: pvc-bazarr-pvc
          persistentVolumeClaim:
            claimName: bazarr-pvc
            readOnly: false
        - hostPath:
            path: /mnt/storage/media/movies
            type: ""
          name: bazarr-movies-bind-mount
        - hostPath:
            path: /mnt/storage/media/tv
            type: ""
          name: bazarr-tv-bind-mount
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: bazarr-pvc
  namespace: lamport
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem
---
apiVersion: v1
kind: Service
metadata:
  name: lamport-bazarr-service
  namespace: lamport
spec:
  externalIPs: []
  ipFamilyPolicy: RequireDualStack
  ports:
    - port: 6767
  selector:
    cdk8s.io/metadata.addr: lamport-bazarr-c8584962
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: lamport-bazarr-tailscale-ingress-ingress
  namespace: lamport
spec:
  defaultBackend:
    service:
      name: lamport-bazarr-service
      port:
        number: 6767
  ingressClassName: tailscale
  tls:
    - hosts:
        - bazarr
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lamport-tautulli
  namespace: lamport
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: lamport-tautulli-c827b506
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: lamport-tautulli-c827b506
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: TZ
              value: America/Los_Angeles
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
          image: ghcr.io/linuxserver/tautulli:2.14.2@sha256:99ff955b1b4ffbb2738aa3b0b612c9f59ab9d05730d38f95684189036429b509
          imagePullPolicy: Always
          name: main
          ports:
            - containerPort: 8181
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
          startupProbe:
            failureThreshold: 3
            tcpSocket:
              port: 8181
          volumeMounts:
            - mountPath: /config
              name: pvc-tautulli-pvc
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
      volumes:
        - name: pvc-tautulli-pvc
          persistentVolumeClaim:
            claimName: tautulli-pvc
            readOnly: false
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: tautulli-pvc
  namespace: lamport
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem
---
apiVersion: v1
kind: Service
metadata:
  name: lamport-tautulli-service
  namespace: lamport
spec:
  externalIPs: []
  ports:
    - port: 8181
  selector:
    cdk8s.io/metadata.addr: lamport-tautulli-c827b506
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: lamport-tautulli-tailscale-ingress-ingress
  namespace: lamport
spec:
  defaultBackend:
    service:
      name: lamport-tautulli-service
      port:
        number: 8181
  ingressClassName: tailscale
  tls:
    - hosts:
        - tautulli
---
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  name: invidious-postgres-onepassword
  namespace: lamport
spec:
  itemPath: vaults/v64ocnykdqju4ui6j6pua56xw4/items/l7quccusjzdh4ww5rhutqpaf2m
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lamport-invidious-postgres-deployment
  namespace: lamport
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: lamport-invidious-postgres-deployment-c8d65c94
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: lamport-invidious-postgres-deployment-c8d65c94
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: TZ
              value: America/Los_Angeles
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: invidious-postgres-onepassword
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            - name: POSTGRES_DB
              value: invidious
          image: postgres:16.2@sha256:4aea012537edfad80f98d870a36e6b90b4c09b27be7f4b4759d72db863baeebb
          imagePullPolicy: Always
          name: main
          ports:
            - containerPort: 5432
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          startupProbe:
            failureThreshold: 3
            tcpSocket:
              port: 5432
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: pvc-invidious-postgres-volume
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
      volumes:
        - name: pvc-invidious-postgres-volume
          persistentVolumeClaim:
            claimName: invidious-postgres-volume
            readOnly: false
---
apiVersion: v1
kind: Service
metadata:
  name: lamport-invidious-postgres-deployment-service
  namespace: lamport
spec:
  externalIPs: []
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    cdk8s.io/metadata.addr: lamport-invidious-postgres-deployment-c8d65c94
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: invidious-postgres-volume
  namespace: lamport
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lamport-invidious
  namespace: lamport
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: lamport-invidious-c896b883
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: lamport-invidious-c896b883
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: TZ
              value: America/Los_Angeles
          image: quay.io/invidious/invidious:2024.04.26-eda7444@sha256:a91a307a3ece8468aa88d6b91a601a0453cf76589f434ffdce643f968d3825cc
          imagePullPolicy: Always
          name: invidious
          ports:
            - containerPort: 3000
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          startupProbe:
            failureThreshold: 3
            tcpSocket:
              port: 3000
          volumeMounts:
            - mountPath: /invidious/config/config.yml
              name: configmap-lamport-invidious-conf
              subPath: config.yml
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            items:
              - key: config.yml
                path: config.yml
            name: lamport-invidious-conf
          name: configmap-lamport-invidious-conf
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: lamport-invidious-conf
  namespace: lamport
data:
  config.yml: |
    db:
      dbname: invidious
      user: postgres
      # not exposed to outside of the cluster, so this should be OK
      # ideally this should be a secret
      password: "orJ.U8QskAB3szvUK-8*"
      host: "lamport-invidious-postgres-deployment-service"
      port: 5432
    check_tables: true
    hmac_key: "f.3_RvweD9yDyxnfvgfA"
immutable: false
---
apiVersion: v1
kind: Service
metadata:
  name: lamport-invidious-service
  namespace: lamport
spec:
  externalIPs: []
  ports:
    - port: 3000
  selector:
    cdk8s.io/metadata.addr: lamport-invidious-c896b883
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: lamport-invidious-tailscale-ingress-ingress
  namespace: lamport
spec:
  defaultBackend:
    service:
      name: lamport-invidious-service
      port:
        number: 3000
  ingressClassName: tailscale
  tls:
    - hosts:
        - invidious
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lamport-teddis-redis-deployment
  namespace: lamport
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: lamport-teddis-redis-deployment-c853563b
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: lamport-teddis-redis-deployment-c853563b
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: TZ
              value: America/Los_Angeles
          image: redis:7.2@sha256:5a93f6b2e391b78e8bd3f9e7e1e1e06aeb5295043b4703fb88392835cec924a0
          imagePullPolicy: Always
          name: main
          ports:
            - containerPort: 6379
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 999
            runAsNonRoot: true
            runAsUser: 999
          startupProbe:
            failureThreshold: 3
            tcpSocket:
              port: 6379
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: lamport-teddis-redis-deployment-service
  namespace: lamport
spec:
  externalIPs: []
  ports:
    - port: 6379
      targetPort: 6379
  selector:
    cdk8s.io/metadata.addr: lamport-teddis-redis-deployment-c853563b
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lamport-teddit
  namespace: lamport
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: lamport-teddit-c82b0ffa
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: lamport-teddit-c82b0ffa
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: TZ
              value: America/Los_Angeles
            - name: REDIS_HOST
              value: lamport-teddis-redis-deployment-service
            - name: DOMAIN
              value: teddit.tailnet-1a49.ts.net
          image: teddit/teddit:latest@sha256:00a5c4f558592d5ef7be7c918cc8965296745a24a54c9bb215884baa31df0fea
          imagePullPolicy: Always
          name: main
          ports:
            - containerPort: 8080
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
          startupProbe:
            failureThreshold: 3
            tcpSocket:
              port: 8080
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: lamport-teddit-service
  namespace: lamport
spec:
  externalIPs: []
  ports:
    - port: 8080
  selector:
    cdk8s.io/metadata.addr: lamport-teddit-c82b0ffa
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: lamport-teddit-tailscale-ingress-ingress
  namespace: lamport
spec:
  defaultBackend:
    service:
      name: lamport-teddit-service
      port:
        number: 8080
  ingressClassName: tailscale
  tls:
    - hosts:
        - teddit
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lamport-plex
  namespace: lamport
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: lamport-plex-c853a5e2
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: lamport-plex-c853a5e2
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: TZ
              value: America/Los_Angeles
            - name: ADVERTISE_IP
              value: https://plex.tailnet-1a49.ts.net
          image: plexinc/pms-docker:1.40.2.8395-c67dce28e@sha256:88c77d86087699f79da9907107243d2b31ed1e0f37e6cfde4cb3082180702ba1
          imagePullPolicy: Always
          name: main
          ports:
            - containerPort: 32400
              hostIP: 0.0.0.0
              hostPort: 32400
              name: port-32400-web
              protocol: TCP
            - containerPort: 1900
              hostPort: 1900
              name: port-1900-dlna
              protocol: UDP
            - containerPort: 5353
              hostPort: 5353
              name: port-5353
              protocol: UDP
            - containerPort: 3005
              hostPort: 3005
              name: port-3005
              protocol: TCP
            - containerPort: 8324
              hostPort: 8324
              name: port-8324-roku
              protocol: TCP
            - containerPort: 32469
              hostPort: 32469
              name: port-32469-dlna
              protocol: TCP
            - containerPort: 32410
              hostPort: 32410
              name: port-32410-gdm
              protocol: UDP
            - containerPort: 32412
              hostPort: 32412
              name: port-32412-gdm
              protocol: UDP
            - containerPort: 32413
              hostPort: 32413
              name: port-32413-gdm
              protocol: UDP
            - containerPort: 32414
              hostPort: 32414
              name: port-32414-gdm
              protocol: UDP
          resources:
            limits:
              gpu.intel.com/i915: 1
          securityContext:
            allowPrivilegeEscalation: true
            privileged: true
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          volumeMounts:
            - mountPath: /config
              name: pvc-plex-pvc
            - mountPath: /data/tv
              name: plex-tv-bind-mount
            - mountPath: /data/movies
              name: plex-movies-bind-mount
            - mountPath: /data/other
              name: plex-other-bind-mount
            - mountPath: /data/music
              name: plex-music-bind-mount
            - mountPath: /transcode
              name: plex-shm-mount
            - mountPath: /dev/dvb
              name: plex-dev-dvb-bind-mount
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
      volumes:
        - name: pvc-plex-pvc
          persistentVolumeClaim:
            claimName: plex-pvc
            readOnly: false
        - hostPath:
            path: /mnt/storage/media/tv
            type: ""
          name: plex-tv-bind-mount
        - hostPath:
            path: /mnt/storage/media/movies
            type: ""
          name: plex-movies-bind-mount
        - hostPath:
            path: /mnt/storage/media/other
            type: ""
          name: plex-other-bind-mount
        - hostPath:
            path: /mnt/storage/media/music
            type: ""
          name: plex-music-bind-mount
        - emptyDir:
            medium: Memory
            sizeLimit: 8192Mi
          name: plex-shm-mount
        - hostPath:
            path: /dev/dvb
            type: ""
          name: plex-dev-dvb-bind-mount
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: plex-pvc
  namespace: lamport
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem
---
apiVersion: v1
kind: Service
metadata:
  name: lamport-plex-service
  namespace: lamport
spec:
  externalIPs: []
  ports:
    - port: 32400
  selector:
    cdk8s.io/metadata.addr: lamport-plex-c853a5e2
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    tailscale.com/funnel: "true"
  name: lamport-plex-tailscale-ingress-ingress
  namespace: lamport
spec:
  defaultBackend:
    service:
      name: lamport-plex-service
      port:
        number: 32400
  ingressClassName: tailscale
  tls:
    - hosts:
        - plex
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lamport-radarr
  namespace: lamport
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: lamport-radarr-c88a1752
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: lamport-radarr-c88a1752
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: TZ
              value: America/Los_Angeles
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
          image: ghcr.io/linuxserver/radarr:5.6.0@sha256:9ea26fed9da394d719ae6790418337510a9c824d0253cbd07d3db70b3aa503be
          imagePullPolicy: Always
          name: main
          ports:
            - containerPort: 7878
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
          startupProbe:
            failureThreshold: 3
            tcpSocket:
              port: 7878
          volumeMounts:
            - mountPath: /config
              name: pvc-radarr-pvc
            - mountPath: /downloads
              name: radarr-torrents-bind-mount
            - mountPath: /movies
              name: radarr-movies-bind-mount
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
      volumes:
        - name: pvc-radarr-pvc
          persistentVolumeClaim:
            claimName: radarr-pvc
            readOnly: false
        - hostPath:
            path: /mnt/storage/downloads/torrents
            type: ""
          name: radarr-torrents-bind-mount
        - hostPath:
            path: /mnt/storage/media/movies
            type: ""
          name: radarr-movies-bind-mount
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: radarr-pvc
  namespace: lamport
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem
---
apiVersion: v1
kind: Service
metadata:
  name: lamport-radarr-service
  namespace: lamport
spec:
  externalIPs: []
  ports:
    - port: 7878
  selector:
    cdk8s.io/metadata.addr: lamport-radarr-c88a1752
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: lamport-radarr-tailscale-ingress-ingress
  namespace: lamport
spec:
  defaultBackend:
    service:
      name: lamport-radarr-service
      port:
        number: 7878
  ingressClassName: tailscale
  tls:
    - hosts:
        - radarr
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lamport-homeassistant
  namespace: lamport
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: lamport-homeassistant-c8e21976
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: lamport-homeassistant-c8e21976
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: TZ
              value: America/Los_Angeles
          image: ghcr.io/home-assistant/home-assistant:2024.5.4@sha256:6f5eeb8360d9d58ff096c7259366993b4b01ebe11251c2b83c9329daad441b00
          imagePullPolicy: Always
          name: main
          ports:
            - containerPort: 8123
              name: port-8123-web
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
          volumeMounts:
            - mountPath: /config
              name: pvc-homeassistant-pvc
      dnsPolicy: ClusterFirst
      hostNetwork: true
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
      volumes:
        - name: pvc-homeassistant-pvc
          persistentVolumeClaim:
            claimName: homeassistant-pvc
            readOnly: false
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: homeassistant-pvc
  namespace: lamport
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem
---
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  name: homeassistant-restic-onepassword-item
  namespace: lamport
spec:
  itemPath: vaults/v64ocnykdqju4ui6j6pua56xw4/items/rm4mkzt3quaa7x2digkkfbamou
---
apiVersion: volsync.backube/v1alpha1
kind: ReplicationSource
metadata:
  name: lamport-homeassistant-replication-source
  namespace: lamport
spec:
  restic:
    copyMethod: Direct
    pruneIntervalDays: 7
    repository: homeassistant-restic-onepassword-item
    retain:
      daily: 7
      monthly: 12
      weekly: 4
  sourcePVC: homeassistant-pvc
  trigger:
    schedule: "*/15 * * * *"
---
apiVersion: v1
kind: Service
metadata:
  name: lamport-homeassistant-service
  namespace: lamport
spec:
  externalIPs: []
  ports:
    - port: 8123
  selector:
    cdk8s.io/metadata.addr: lamport-homeassistant-c8e21976
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    tailscale.com/funnel: "true"
  name: lamport-homeassistant-tailscale-ingress-ingress
  namespace: lamport
spec:
  defaultBackend:
    service:
      name: lamport-homeassistant-service
      port:
        number: 8123
  ingressClassName: tailscale
  tls:
    - hosts:
        - homeassistant
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lamport-overseerr
  namespace: lamport
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: lamport-overseerr-c87596e1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: lamport-overseerr-c87596e1
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: TZ
              value: America/Los_Angeles
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
          image: ghcr.io/linuxserver/overseerr:1.33.2@sha256:176a757cfee7307d40bf99ab2bcbe1642d943892f75639ad02b6d24485c2b021
          imagePullPolicy: Always
          name: main
          ports:
            - containerPort: 5055
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
          startupProbe:
            failureThreshold: 3
            tcpSocket:
              port: 5055
          volumeMounts:
            - mountPath: /config
              name: pvc-overseerr-pvc
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
      volumes:
        - name: pvc-overseerr-pvc
          persistentVolumeClaim:
            claimName: overseerr-pvc
            readOnly: false
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: overseerr-pvc
  namespace: lamport
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem
---
apiVersion: v1
kind: Service
metadata:
  name: lamport-overseerr-service
  namespace: lamport
spec:
  externalIPs: []
  ports:
    - port: 5055
  selector:
    cdk8s.io/metadata.addr: lamport-overseerr-c87596e1
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    tailscale.com/funnel: "true"
  name: lamport-overseerr-tailscale-ingress-ingress
  namespace: lamport
spec:
  defaultBackend:
    service:
      name: lamport-overseerr-service
      port:
        number: 5055
  ingressClassName: tailscale
  tls:
    - hosts:
        - overseerr
---
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  name: lamport-mullvad
  namespace: lamport
spec:
  itemPath: vaults/v64ocnykdqju4ui6j6pua56xw4/items/74rqjncejp7rpgelymnmul5ssm
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lamport-qbittorrent
  namespace: lamport
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: lamport-qbittorrent-c8a4a28f
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: lamport-qbittorrent-c8a4a28f
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: TZ
              value: America/Los_Angeles
            - name: UPDATER_PERIOD
              value: 24h
            - name: VPN_SERVICE_PROVIDER
              value: airvpn
            - name: VPN_TYPE
              value: wireguard
            - name: WIREGUARD_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  key: private-key
                  name: lamport-mullvad
            - name: WIREGUARD_PRESHARED_KEY
              valueFrom:
                secretKeyRef:
                  key: preshared-key
                  name: lamport-mullvad
            - name: WIREGUARD_ADDRESSES
              value: 10.154.174.240/32,fd7d:76ee:e68f:a993:af57:e79c:b39d:9dde/128
            - name: FIREWALL_VPN_INPUT_PORTS
              value: "16793"
          image: ghcr.io/qdm12/gluetun:v3.38@sha256:5522794f5cce6d84bc7f06b1e3a3b836ede9100c64aec94543cb503bb2ecb72f
          imagePullPolicy: Always
          name: gluetun
          securityContext:
            allowPrivilegeEscalation: true
            privileged: true
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          volumeMounts:
            - mountPath: /gluetun
              name: pvc-qbittorrent-gluetun-pvc
        - env:
            - name: TZ
              value: America/Los_Angeles
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
          image: ghcr.io/linuxserver/qbittorrent:4.6.4@sha256:8e03090acc0b53f27fe085fbf04e132607cc2b6b2497cfe1b3bd6343833a7069
          imagePullPolicy: Always
          name: qbittorrent
          ports:
            - containerPort: 8080
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
          startupProbe:
            failureThreshold: 3
            tcpSocket:
              port: 8080
          volumeMounts:
            - mountPath: /config
              name: pvc-qbittorrent-pvc
            - mountPath: /downloads
              name: qbittorrent-bind-mount
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
      volumes:
        - name: pvc-qbittorrent-gluetun-pvc
          persistentVolumeClaim:
            claimName: qbittorrent-gluetun-pvc
            readOnly: false
        - name: pvc-qbittorrent-pvc
          persistentVolumeClaim:
            claimName: qbittorrent-pvc
            readOnly: false
        - hostPath:
            path: /mnt/storage/downloads/torrents
            type: ""
          name: qbittorrent-bind-mount
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: qbittorrent-pvc
  namespace: lamport
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: qbittorrent-gluetun-pvc
  namespace: lamport
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    metallb.universe.tf/allow-shared-ip: gluetun
  name: lamport-qbittorrent-service
  namespace: lamport
spec:
  externalIPs: []
  ports:
    - port: 8080
  selector:
    cdk8s.io/metadata.addr: lamport-qbittorrent-c8a4a28f
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: lamport-qbittorrent-tailscale-ingress-ingress
  namespace: lamport
spec:
  defaultBackend:
    service:
      name: lamport-qbittorrent-service
      port:
        number: 8080
  ingressClassName: tailscale
  tls:
    - hosts:
        - qbittorrent
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lamport-sonarr
  namespace: lamport
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: lamport-sonarr-c829f3bd
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: lamport-sonarr-c829f3bd
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: TZ
              value: America/Los_Angeles
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
          image: ghcr.io/linuxserver/sonarr:4.0.4@sha256:25e0f3b3741cf8df6c322d6c9016b5be91ca6e154653b4d01c8c125bf1ce75c0
          imagePullPolicy: Always
          name: main
          ports:
            - containerPort: 8989
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
          startupProbe:
            failureThreshold: 3
            tcpSocket:
              port: 8989
          volumeMounts:
            - mountPath: /config
              name: pvc-sonarr-pvc
            - mountPath: /downloads
              name: sonarr-torrents-bind-mount
            - mountPath: /tv
              name: sonarr-tv-bind-mount
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
      volumes:
        - name: pvc-sonarr-pvc
          persistentVolumeClaim:
            claimName: sonarr-pvc
            readOnly: false
        - hostPath:
            path: /mnt/storage/downloads/torrents
            type: ""
          name: sonarr-torrents-bind-mount
        - hostPath:
            path: /mnt/storage/media/tv
            type: ""
          name: sonarr-tv-bind-mount
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonarr-pvc
  namespace: lamport
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem
---
apiVersion: v1
kind: Service
metadata:
  name: lamport-sonarr-service
  namespace: lamport
spec:
  externalIPs: []
  ports:
    - port: 8989
  selector:
    cdk8s.io/metadata.addr: lamport-sonarr-c829f3bd
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: lamport-sonarr-tailscale-ingress-ingress
  namespace: lamport
spec:
  defaultBackend:
    service:
      name: lamport-sonarr-service
      port:
        number: 8989
  ingressClassName: tailscale
  tls:
    - hosts:
        - sonarr
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lamport-syncthing
  namespace: lamport
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: lamport-syncthing-c8119c20
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: lamport-syncthing-c8119c20
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: TZ
              value: America/Los_Angeles
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
          image: ghcr.io/linuxserver/syncthing:1.27.7@sha256:5606a1fe483c7f98c9a5e110fc52000d22337218cd458ff07791f80febe687dc
          imagePullPolicy: Always
          name: main
          ports:
            - containerPort: 8384
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
          startupProbe:
            failureThreshold: 3
            tcpSocket:
              port: 8384
          volumeMounts:
            - mountPath: /config
              name: pvc-syncthing-config
            - mountPath: /sync
              name: pvc-syncthing-data
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
      volumes:
        - name: pvc-syncthing-config
          persistentVolumeClaim:
            claimName: syncthing-config
            readOnly: false
        - name: pvc-syncthing-data
          persistentVolumeClaim:
            claimName: syncthing-data
            readOnly: false
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: syncthing-config
  namespace: lamport
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: syncthing-data
  namespace: lamport
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem
---
apiVersion: v1
kind: Service
metadata:
  name: lamport-syncthing-service
  namespace: lamport
spec:
  externalIPs: []
  ports:
    - port: 8384
  selector:
    cdk8s.io/metadata.addr: lamport-syncthing-c8119c20
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: lamport-syncthing-tailscale-ingress-ingress
  namespace: lamport
spec:
  defaultBackend:
    service:
      name: lamport-syncthing-service
      port:
        number: 8384
  ingressClassName: tailscale
  tls:
    - hosts:
        - syncthing
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lamport-golink
  namespace: lamport
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: lamport-golink-c8950952
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: lamport-golink-c8950952
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: TZ
              value: America/Los_Angeles
            - name: TS_AUTH_KEY
              valueFrom:
                secretKeyRef:
                  key: credential
                  name: tailscale-auth-key
          image: ghcr.io/tailscale/golink:main@sha256:ef29beb71f86ea265e3038e69521a6f21d1281b30cd1f2d32ea1b4ed79d3f1f5
          imagePullPolicy: Always
          name: main
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          volumeMounts:
            - mountPath: /home/nonroot
              name: pvc-golink-pvc
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
      volumes:
        - name: pvc-golink-pvc
          persistentVolumeClaim:
            claimName: golink-pvc
            readOnly: false
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: golink-pvc
  namespace: lamport
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem
---
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  name: tailscale-auth-key
  namespace: lamport
spec:
  itemPath: vaults/v64ocnykdqju4ui6j6pua56xw4/items/t5scpnlhnxvu25dneg6jdd7c7q
---
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  name: golink-restic-onepassword-item
  namespace: lamport
spec:
  itemPath: vaults/v64ocnykdqju4ui6j6pua56xw4/items/55dd4k7uxlbtayhzxkxfxu7aqm
---
apiVersion: volsync.backube/v1alpha1
kind: ReplicationSource
metadata:
  name: lamport-golink-replication-source
  namespace: lamport
spec:
  restic:
    copyMethod: Direct
    pruneIntervalDays: 7
    repository: golink-restic-onepassword-item
    retain:
      daily: 7
      monthly: 12
      weekly: 4
  sourcePVC: golink-pvc
  trigger:
    schedule: "*/15 * * * *"
---
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  name: tmdb-api-key
  namespace: lamport
spec:
  itemPath: vaults/v64ocnykdqju4ui6j6pua56xw4/items/z5a3jfyku5hvfxjzmvzm4ma3b4
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lamport-bitmagnet-redis-deployment
  namespace: lamport
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: lamport-bitmagnet-redis-deployment-c8a1bca7
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: lamport-bitmagnet-redis-deployment-c8a1bca7
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: TZ
              value: America/Los_Angeles
          image: redis:7.2@sha256:5a93f6b2e391b78e8bd3f9e7e1e1e06aeb5295043b4703fb88392835cec924a0
          imagePullPolicy: Always
          name: main
          ports:
            - containerPort: 6379
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 999
            runAsNonRoot: true
            runAsUser: 999
          startupProbe:
            failureThreshold: 3
            tcpSocket:
              port: 6379
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: lamport-bitmagnet-redis-deployment-service
  namespace: lamport
spec:
  externalIPs: []
  ports:
    - port: 6379
      targetPort: 6379
  selector:
    cdk8s.io/metadata.addr: lamport-bitmagnet-redis-deployment-c8a1bca7
  type: ClusterIP
---
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  name: bitmagnet-postgres-onepassword
  namespace: lamport
spec:
  itemPath: vaults/v64ocnykdqju4ui6j6pua56xw4/items/3fznikxjqt4szpz3ngdv462m6m
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lamport-bitmagnet-postgres-deployment
  namespace: lamport
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: lamport-bitmagnet-postgres-deployment-c8cacff2
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: lamport-bitmagnet-postgres-deployment-c8cacff2
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: TZ
              value: America/Los_Angeles
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: bitmagnet-postgres-onepassword
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            - name: POSTGRES_DB
              value: bitmagnet
          image: postgres:16.2@sha256:4aea012537edfad80f98d870a36e6b90b4c09b27be7f4b4759d72db863baeebb
          imagePullPolicy: Always
          name: main
          ports:
            - containerPort: 5432
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          startupProbe:
            failureThreshold: 3
            tcpSocket:
              port: 5432
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: pvc-bitmagnet-postgres-volume
            - mountPath: /var/lib/postgresql/data/pgdata/pg_wal
              name: bitmagnet-postgres-wal-tmpfs
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
      volumes:
        - name: pvc-bitmagnet-postgres-volume
          persistentVolumeClaim:
            claimName: bitmagnet-postgres-volume
            readOnly: false
        - emptyDir:
            medium: Memory
          name: bitmagnet-postgres-wal-tmpfs
---
apiVersion: v1
kind: Service
metadata:
  name: lamport-bitmagnet-postgres-deployment-service
  namespace: lamport
spec:
  externalIPs: []
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    cdk8s.io/metadata.addr: lamport-bitmagnet-postgres-deployment-c8cacff2
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: bitmagnet-postgres-volume
  namespace: lamport
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lamport-bitmagnet
  namespace: lamport
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: lamport-bitmagnet-c8718e1d
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: lamport-bitmagnet-c8718e1d
    spec:
      automountServiceAccountToken: false
      containers:
        - command:
            - bitmagnet
            - worker
            - run
            - --keys=http_server
            - --keys=queue_server
            - --keys=dht_crawler
          env:
            - name: TZ
              value: America/Los_Angeles
            - name: POSTGRES_HOST
              value: lamport-bitmagnet-postgres-deployment-service
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: bitmagnet-postgres-onepassword
            - name: REDIS_ADDR
              value: lamport-bitmagnet-redis-deployment-service:6379
            - name: TMDB_API_KEY
              valueFrom:
                secretKeyRef:
                  key: api-key
                  name: tmdb-api-key
          image: ghcr.io/bitmagnet-io/bitmagnet:v0.8.0@sha256:c638773151d97e6bd2e19f181f0845be4c82893974975037aa06665c711e4466
          imagePullPolicy: Always
          name: main
          ports:
            - containerPort: 3333
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
          startupProbe:
            failureThreshold: 3
            tcpSocket:
              port: 3333
          volumeMounts:
            - mountPath: /app
              name: pvc-bitmagnet-pvc
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
      volumes:
        - name: pvc-bitmagnet-pvc
          persistentVolumeClaim:
            claimName: bitmagnet-pvc
            readOnly: false
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: bitmagnet-pvc
  namespace: lamport
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem
---
apiVersion: v1
kind: Service
metadata:
  name: lamport-bitmagnet-service
  namespace: lamport
spec:
  externalIPs: []
  ports:
    - port: 3333
  selector:
    cdk8s.io/metadata.addr: lamport-bitmagnet-c8718e1d
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: lamport-bitmagnet-tailscale-ingress-ingress
  namespace: lamport
spec:
  defaultBackend:
    service:
      name: lamport-bitmagnet-service
      port:
        number: 3333
  ingressClassName: tailscale
  tls:
    - hosts:
        - bitmagnet
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lamport-prowlarr
  namespace: lamport
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: lamport-prowlarr-c8f63e06
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: lamport-prowlarr-c8f63e06
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: TZ
              value: America/Los_Angeles
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
          image: ghcr.io/linuxserver/prowlarr:1.17.2@sha256:b0dabccc49b6e994665ae8751224aa3ca4c31b29b18815394a330d591e5f8ed8
          imagePullPolicy: Always
          name: main
          ports:
            - containerPort: 9696
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
          startupProbe:
            failureThreshold: 3
            tcpSocket:
              port: 9696
          volumeMounts:
            - mountPath: /config
              name: pvc-prowlarr-pvc
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
      volumes:
        - name: pvc-prowlarr-pvc
          persistentVolumeClaim:
            claimName: prowlarr-pvc
            readOnly: false
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prowlarr-pvc
  namespace: lamport
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem
---
apiVersion: v1
kind: Service
metadata:
  name: lamport-prowlarr-service
  namespace: lamport
spec:
  externalIPs: []
  ports:
    - port: 9696
  selector:
    cdk8s.io/metadata.addr: lamport-prowlarr-c8f63e06
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: lamport-prowlarr-tailscale-ingress-ingress
  namespace: lamport
spec:
  defaultBackend:
    service:
      name: lamport-prowlarr-service
      port:
        number: 9696
  ingressClassName: tailscale
  tls:
    - hosts:
        - prowlarr
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lamport-palworld
  namespace: lamport
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 0
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: lamport-palworld-c897ee52
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: lamport-palworld-c897ee52
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: TZ
              value: America/Los_Angeles
            - name: PORT
              value: "8211"
            - name: PLAYERS
              value: "16"
            - name: SERVER_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: lamport-palworld-item
            - name: MULTITHREADING
              value: "true"
            - name: RCON_ENABLED
              value: "true"
            - name: RCON_PORT
              value: "27015"
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: rcon-password
                  name: lamport-palworld-item
            - name: COMMUNITY
              value: "false"
            - name: SERVER_NAME
              value: glitter
            - name: SERVER_DESCRIPTION
              value: whats up guys
            - name: DEATH_PENALTY
              value: ItemAndEquipment
            - name: BACKUP_ENABLED
              value: "false"
            - name: PAL_EGG_DEFAULT_HATCHING_TIME
              value: "1.000000"
            - name: ENABLE_INVADER_ENEMY
              value: "False"
            - name: PAL_STOMACH_DECREASE_RATE
              value: "-1.000000"
            - name: UPDATE_ON_BOOT
              value: "true"
            - name: BUILD_OBJECT_DETERIORATION_DAMAGE_RATE
              value: "0"
          image: ghcr.io/thijsvanloef/palworld-server-docker:v0.37.0@sha256:40930091c4a264a6b6f36bce432805383cc3dfd577c72471d76e55dece8a1ad5
          imagePullPolicy: Always
          name: main
          ports:
            - containerPort: 8211
              protocol: UDP
            - containerPort: 27015
              protocol: UDP
          resources:
            limits:
              memory: 20480Mi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          volumeMounts:
            - mountPath: /palworld
              name: pvc-palworld-pvc
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
      volumes:
        - name: pvc-palworld-pvc
          persistentVolumeClaim:
            claimName: palworld-pvc
            readOnly: false
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: palworld-pvc
  namespace: lamport
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem
---
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  name: lamport-palworld-item
  namespace: lamport
spec:
  itemPath: vaults/v64ocnykdqju4ui6j6pua56xw4/items/yrlyezq2axgfkdfchtl7n7o6b4
---
apiVersion: v1
kind: Service
metadata:
  name: lamport-palworld-game-service
  namespace: lamport
spec:
  externalIPs: []
  ports:
    - nodePort: 8211
      port: 8211
      protocol: UDP
  selector:
    cdk8s.io/metadata.addr: lamport-palworld-c897ee52
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: lamport-palworld-query-service
  namespace: lamport
spec:
  externalIPs: []
  ports:
    - nodePort: 27015
      port: 27015
      protocol: UDP
  selector:
    cdk8s.io/metadata.addr: lamport-palworld-c897ee52
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lamport-earthly
  namespace: lamport
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: lamport-earthly-c8d12215
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: lamport-earthly-c8d12215
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: TZ
              value: America/Los_Angeles
            - name: EARTHLY_ORG
              value: sjerred
            - name: EARTHLY_TOKEN
              valueFrom:
                secretKeyRef:
                  key: credential
                  name: earthly-onepassword
            - name: SATELLITE_NAME
              value: lamport
            - name: SATELLITE_HOST
              value: lamport.tailnet-1a49.ts.net
            - name: CACHE_SIZE_PCT
              value: "10"
            - name: BUILDKIT_MAX_PARALLELISM
              value: "24"
          image: earthly/satellite:v0.8.11@sha256:6fd2b6b388405474bd85d9a0203ae8e5ff4ae7859d099b8a84978007dc0d2ebf
          imagePullPolicy: Always
          name: main
          ports:
            - containerPort: 8372
          securityContext:
            allowPrivilegeEscalation: true
            privileged: true
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          startupProbe:
            failureThreshold: 3
            tcpSocket:
              port: 8372
          volumeMounts:
            - mountPath: /tmp/earthly
              name: pvc-earthly-pvc
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
      volumes:
        - name: pvc-earthly-pvc
          persistentVolumeClaim:
            claimName: earthly-pvc
            readOnly: false
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: earthly-pvc
  namespace: lamport
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem
---
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  name: earthly-onepassword
  namespace: lamport
spec:
  itemPath: vaults/v64ocnykdqju4ui6j6pua56xw4/items/sbjrtou6h3f5w2uhj4uluywsre
---
apiVersion: v1
kind: Service
metadata:
  name: lamport-earthly-service
  namespace: lamport
spec:
  externalIPs: []
  ports:
    - port: 8372
  selector:
    cdk8s.io/metadata.addr: lamport-earthly-c8d12215
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lamport-minecraft
  namespace: lamport
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 0
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: lamport-minecraft-c8e86859
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: lamport-minecraft-c8e86859
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: TZ
              value: America/Los_Angeles
            - name: EULA
              value: "true"
            - name: MEMORY
              value: 12G
            - name: MOD_PLATFORM
              value: AUTO_CURSEFORGE
            - name: CF_API_KEY
              valueFrom:
                secretKeyRef:
                  key: credential
                  name: lamport-curseforge-item
            - name: CF_PAGE_URL
              value: https://www.curseforge.com/minecraft/modpacks/all-the-mods-8
            - name: VERSION
              value: 1.19.2
            - name: ALLOW_FLIGHT
              value: "true"
            - name: MOTD
              value: what's up guys
            - name: DIFFICULTY
              value: hard
            - name: ENABLE_WHITELIST
              value: "true"
            - name: WHITELIST
              value: RiotShielder,gexboy8,BubbaLeFett,lolopToaster,Bill_Buchness
            - name: OVERRIDE_WHITELIST
              value: "true"
            - name: MAX_PLAYERS
              value: "10"
            - name: FORCE_GAMEMODE
              value: "true"
            - name: VIEW_DISTANCE
              value: "10"
            - name: SERVER_NAME
              value: glitter boys
            - name: ENABLE_ROLLING_LOGS
              value: "true"
            - name: STOP_SERVER_ANNOUNCE_DELAY
              value: "10"
          image: itzg/minecraft-server:2024.5.0-java21@sha256:1ff47453ce66194927313d628c32a485c34d0acc9c01c9dbd643584c50cf89e6
          imagePullPolicy: Always
          name: main
          ports:
            - containerPort: 25565
              protocol: TCP
          resources:
            limits:
              memory: 12288Mi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          volumeMounts:
            - mountPath: /data
              name: pvc-minecraft-pvc
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
      volumes:
        - name: pvc-minecraft-pvc
          persistentVolumeClaim:
            claimName: minecraft-pvc
            readOnly: false
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minecraft-pvc
  namespace: lamport
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem
---
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  name: minecraft-restic-onepassword-item
  namespace: lamport
spec:
  itemPath: vaults/v64ocnykdqju4ui6j6pua56xw4/items/qtttm5re4xqpaivyohzkpznwsy
---
apiVersion: volsync.backube/v1alpha1
kind: ReplicationSource
metadata:
  name: lamport-minecraft-replication-source
  namespace: lamport
spec:
  restic:
    copyMethod: Direct
    pruneIntervalDays: 7
    repository: minecraft-restic-onepassword-item
    retain:
      daily: 7
      monthly: 12
      weekly: 4
  sourcePVC: minecraft-pvc
  trigger:
    schedule: 0 * * * *
---
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  name: lamport-curseforge-item
  namespace: lamport
spec:
  itemPath: vaults/v64ocnykdqju4ui6j6pua56xw4/items/riztc65o7v6buzvsa4cfgul2uy
---
apiVersion: v1
kind: Service
metadata:
  name: lamport-minecraft-game-service
  namespace: lamport
spec:
  externalIPs: []
  ports:
    - nodePort: 25565
      port: 25565
      protocol: TCP
  selector:
    cdk8s.io/metadata.addr: lamport-minecraft-c8e86859
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lamport-ddns
  namespace: lamport
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: lamport-ddns-c820791e
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: lamport-ddns-c820791e
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: TZ
              value: America/Los_Angeles
          image: timothyjmiller/cloudflare-ddns:latest@sha256:479bbc53f9f8d547413305e003fe7480cc45c12008cbca2cec5a0c5d30c72ad9
          imagePullPolicy: Always
          name: main
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
          volumeMounts:
            - mountPath: /config.json
              name: secret-lamport-ddns-config
              subPath: config.json
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
      volumes:
        - name: secret-lamport-ddns-config
          secret:
            items:
              - key: config.json
                path: config.json
            secretName: lamport-ddns-config
---
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  name: lamport-ddns-config
  namespace: lamport
spec:
  itemPath: vaults/v64ocnykdqju4ui6j6pua56xw4/items/nhyb6lnjpvjsau2gkmb7n42oeq
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lamport-valheim
  namespace: lamport
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: lamport-valheim-c81b6975
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: lamport-valheim-c81b6975
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: TZ
              value: America/Los_Angeles
            - name: PORT
              value: "8211"
            - name: PLAYERS
              value: "16"
            - name: SERVER_NAME
              value: Erkin's Cousin
            - name: WORLD_NAME
              value: world
            - name: SERVER_PASS
              valueFrom:
                secretKeyRef:
                  key: password
                  name: lamport-valheim-item
          image: "ghcr.io/lloesche/valheim-server:latest@sha256:85ab5dbb0e538cd7c711231384a1b78357ac6f85611219022e1be22e856d922f "
          imagePullPolicy: Always
          name: main
          ports:
            - containerPort: 2456
              protocol: UDP
            - containerPort: 2457
              protocol: UDP
          resources:
            limits:
              memory: 20480Mi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          volumeMounts:
            - mountPath: /config
              name: pvc-valheim-pvc
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
      volumes:
        - name: pvc-valheim-pvc
          persistentVolumeClaim:
            claimName: valheim-pvc
            readOnly: false
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: valheim-pvc
  namespace: lamport
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem
---
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  name: lamport-valheim-item
  namespace: lamport
spec:
  itemPath: vaults/v64ocnykdqju4ui6j6pua56xw4/items/dqukjzskwmpt6gurjfaeuxau7i
---
apiVersion: v1
kind: Service
metadata:
  name: lamport-valheim-game-service
  namespace: lamport
spec:
  externalIPs: []
  ports:
    - nodePort: 2456
      port: 2456
      protocol: UDP
  selector:
    cdk8s.io/metadata.addr: lamport-valheim-c81b6975
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: lamport-valheim-query-service
  namespace: lamport
spec:
  externalIPs: []
  ports:
    - nodePort: 2457
      port: 2457
      protocol: UDP
  selector:
    cdk8s.io/metadata.addr: lamport-valheim-c81b6975
  type: NodePort
