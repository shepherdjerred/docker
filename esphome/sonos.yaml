esphome:
  name: sonos
  friendly_name: Sonos

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "Tslu2a+hVrznTBs7xSspx8d6Vnn41xsGhdE+B0aackE="

ota:
  password: "6098cca29ea7dddc92e1b99ed2c6ac95"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Sonos Fallback Hotspot"
    password: "KHQjLbqc7uOX"

captive_portal:

output:
  - platform: ledc
    id: red_channel_1
    pin: GPIO13
  - platform: ledc
    id: red_channel_2
    pin: GPIO27
  - platform: ledc
    id: red_channel_3
    pin: GPIO21

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO15
      mode:
        input: true
        pullup: true
    id: play
    name: "Play"
    on_click:
      then:
        - homeassistant.service:
            service: script.sonos_play
    # on_double_click:
    #   then:
    #     - homeassistant.service:
    #         service: script.sonos_play_favorites
  - platform: gpio
    id: kitchen_toggle
    name: Kitchen
    publish_initial_state: true
    pin:
      number: GPIO19
      mode:
        input: true
        pullup: true
    on_press:
      then:
        - light.turn_on: kitchen_light
        - homeassistant.service:
            service: script.sonos_join
            data:
              target: media_player.kitchen
    on_release:
      then:
        - light.turn_off: kitchen_light
        - homeassistant.service:
            service: script.sonos_unjoin
            data:
              target: media_player.kitchen
  - platform: gpio
    id: living_room_toggle
    name: Living Room
    publish_initial_state: true
    pin:
      number: GPIO5
      mode:
        input: true
        pullup: true
    on_press:
      then:
        - light.turn_on: living_room_light
        - homeassistant.service:
            service: script.sonos_join
            data:
              target: media_player.living_room
    on_release:
      then:
        - light.turn_off: living_room_light
        - homeassistant.service:
            service: script.sonos_unjoin
            data:
              target: media_player.living_room
  - platform: gpio
    id: bedroom_toggle
    name: Bedroom
    publish_initial_state: true
    pin:
      number: GPIO04
      mode:
        input: true
        pullup: true
    on_press:
      then:
        - light.turn_on: bedroom_light
        - homeassistant.service:
            service: script.sonos_join
            data:
              target: media_player.bedroom
    on_release:
      then:
        - light.turn_off: bedroom_light
        - homeassistant.service:
            service: script.sonos_unjoin
            data:
              target: media_player.bedroom

sensor:
  - platform: adc
    pin: GPIO32
    name: Internal Kitchen Volume
    id: internal_kitchen_volume
    update_interval: 1s
  - platform: template
    name: Kitchen Volume
    id: kitchen_volume
    update_interval: 1s
    unit_of_measurement: "%"
    lambda: |-
      float minValue = 0.075; // Minimum observed value from the potentiometer
      float maxValue = 1.033; // Maximum observed value from the potentiometer
      float scaledValue = (id(internal_kitchen_volume).state - minValue) * 100.0 / (maxValue - minValue);
      return scaledValue;
    on_value:
      - homeassistant.service:
          service: script.sonos_volume
          data:
            target: media_player.kitchen
            volume: !lambda "return x / 100;"
  - platform: adc
    pin: GPIO35
    name: Internal Living Room Volume
    id: internal_living_room_volume
    update_interval: 1s
  - platform: template
    name: Living Room Volume
    id: living_room_volume
    update_interval: 1s
    unit_of_measurement: "%"
    lambda: |-
      float minValue = 0.075; // Minimum observed value from the potentiometer
      float maxValue = 1.033; // Maximum observed value from the potentiometer
      float scaledValue = (id(internal_living_room_volume).state - minValue) * 100.0 / (maxValue - minValue);
      return scaledValue;
    on_value:
      - homeassistant.service:
          service: script.sonos_volume
          data:
            target: media_player.living_room
            volume: !lambda "return x / 100;"
  - platform: adc
    pin: GPIO34
    name: Internal Bedroom Volume
    id: internal_bedroom_volume
    update_interval: 1s
  - platform: template
    name: Bedroom Volume
    id: bedroom_volume
    update_interval: 1s
    unit_of_measurement: "%"
    lambda: |-
      float minValue = 0.075; // Minimum observed value from the potentiometer
      float maxValue = 1.033; // Maximum observed value from the potentiometer
      float scaledValue = (id(internal_bedroom_volume).state - minValue) * 100.0 / (maxValue - minValue);
      return scaledValue;
    on_value:
      - homeassistant.service:
          service: script.sonos_volume
          data:
            target: media_player.bedroom
            volume: !lambda "return x / 100;"

light:
  - platform: binary
    id: living_room_light
    name: Living Room
    output: red_channel_1
  - platform: binary
    id: kitchen_light
    name: Kitchen
    output: red_channel_3
  - platform: binary
    id: bedroom_light
    name: Bedroom Light
    output: red_channel_2
