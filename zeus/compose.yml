---
services:
  cloudflare-ddns:
    image: timothyjmiller/cloudflare-ddns
    container_name: cloudflare-ddns
    env_file:
      - config/vars.env
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ./config/cloudflare-ddns/config.json:/config.json
    restart: unless-stopped
  teddit:
    image: teddit/teddit
    container_name: teddit
    environment:
      REDIS_HOST: teddit_redis
      DOMAIN: teddit.ts.zeus.sjer.red
    env_file:
      - config/vars.env
    restart: unless-stopped
    depends_on:
      - teddit_redis
  teddit_redis:
    image: redis
    container_name: teddit_redis
    env_file:
      - config/vars.env
    restart: unless-stopped
  nitter_redis:
    image: redis
    container_name: nitter_redis
    env_file:
      - config/vars.env
    restart: unless-stopped
  nitter:
    image: zedeus/nitter
    container_name: nitter
    env_file:
      - config/vars.env
    volumes:
      - ./config/nitter.conf:/src/nitter.conf:ro,Z
    restart: unless-stopped
    depends_on:
      - nitter_redis
  wireguard:
    image: linuxserver/wireguard
    container_name: wireguard
    env_file:
      - config/vars.env
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv6.conf.all.disable_ipv6=0
      - net.ipv6.conf.all.forwarding=1
      - net.ipv6.conf.default.forwarding=1
    volumes:
      - /lib/modules:/lib/modules
      - ./config/wireguard:/config
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent
    container_name: qbittorrent
    env_file:
      - config/vars.env
    volumes:
      - qbittorrent-config:/config
      - /mnt/storage/downloads/torrents:/downloads:Z
    network_mode: "service:wireguard"
    restart: unless-stopped
  datadog:
    container_name: datadog
    image: gcr.io/datadoghq/agent:7
    environment:
      DD_API_KEY: "{{ .Env.DATADOG_API_KEY }}"
      DD_SITE: datadoghq.com
      DD_PROCESS_AGENT_ENABLED: "true"
      DD_LOGS_ENABLED: "true"
      DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL: "true"
      DD_SYSTEM_PROBE_ENABLED: "true"
      DD_APM_ENABLED: "true"
      DD_LOGS_CONFIG_USE_HTTP: "true"
    labels:
      ad.datadoghq.com/speedtest.check_names: |
        ["openmetrics"]
      ad.datadoghq.com/speedtest.init_configs: |
        [{}]
      ad.datadoghq.com/speedtest.instances: |
        [
          {
            "openmetrics_endpoint": "http://%%host%%:%%port%%/metrics ",
            "namespace": "speedtest",
            "metrics": [".*"]
          }
        ]
      ad.datadoghq.com/syncthing_exporter.check_names: |
        ["openmetrics"]
      ad.datadoghq.com/syncthing_exporter.init_configs: |
        [{}]
      ad.datadoghq.com/syncthing_exporter.instances: |
        [
          {
            "openmetrics_endpoint": "http://%%host%%:%%port%%/metrics ",
            "namespace": "syncthing_exporter",
            "metrics": [".*"]
          }
        ]
      ad.datadoghq.com/caddy_tailscale.check_names: |
        ["openmetrics"]
      ad.datadoghq.com/caddy_tailscale.init_configs: |
        [{}]
      ad.datadoghq.com/caddy_tailscale.instances: |
        [
          {
            "openmetrics_endpoint": "http://%%host%%:2019/metrics ",
            "namespace": "caddy_tailscale",
            "metrics": [".*"]
          }
        ]
      ad.datadoghq.com/caddy_public.check_names: |
        ["openmetrics"]
      ad.datadoghq.com/caddy_public.init_configs: |
        [{}]
      ad.datadoghq.com/caddy_public.instances: |
        [
          {
            "openmetrics_endpoint": "http://%%host%%:2019/metrics ",
            "namespace": "caddy_public",
            "metrics": [".*"]
          }
        ]
    cap_add:
      - SYS_ADMIN
      - SYS_RESOURCE
      - SYS_PTRACE
      - NET_ADMIN
      - NET_BROADCAST
      - NET_RAW
      - IPC_LOCK
      - CHOWN
    security_opt:
      - apparmor:unconfined
    volumes:
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
      - /sys/kernel/debug:/sys/kernel/debug
      - /etc/passwd:/etc/passwd:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /opt/datadog-agent/run:/opt/datadog-agent/run:rw
      - /proc/:/host/proc/:ro
      - /mnt/storage:/mnt/storage:ro # for metrics
  caddy_tailscale:
    container_name: caddy_tailscale
    depends_on:
      - tailscale
    build: config/caddy
    environment:
      CLOUDFLARE_TOKEN: "{{ .Env.CLOUDFLARE_TOKEN }}"
    env_file:
      - config/vars.env
    ports:
      - '{{ (datasource "vars").network.tailscale.ipv4 }}:80:80'
      - '{{ (datasource "vars").network.tailscale.ipv4 }}:443:443'
      - '[{{ (datasource "vars").network.tailscale.ipv6 }}]:80:80'
      - '[{{ (datasource "vars").network.tailscale.ipv6 }}]:443:443'
    volumes:
      - caddy-tailscale-config:/config:Z
      - caddy-tailscale-data:/data:Z
      - ./static/tailscale.html:/srv/index.html:Z
      - ./config/caddy/tailscale.Caddyfile:/etc/caddy/Caddyfile:ro,Z
    restart: unless-stopped
  caddy_public:
    container_name: caddy_public
    build: config/caddy
    environment:
      CLOUDFLARE_TOKEN: "{{ .Env.CLOUDFLARE_TOKEN }}"
    env_file:
      - config/vars.env
    ports:
      - '{{ (datasource "vars").network.public.ipv4 }}:80:80'
      - '{{ (datasource "vars").network.public.ipv4 }}:443:443'
      - '[{{ (datasource "vars").network.public.ipv6 }}]:80:80'
      - '[{{ (datasource "vars").network.public.ipv6 }}]:443:443'
    volumes:
      - caddy-public-config:/config:Z
      - caddy-public-data:/data:Z
      - ./static/public.html:/srv/index.html:Z
      - ./config/caddy/public.Caddyfile:/etc/caddy/Caddyfile:ro,Z
    restart: unless-stopped
  bazarr:
    container_name: bazarr
    env_file:
      - config/vars.env
    image: lscr.io/linuxserver/bazarr
    restart: unless-stopped
    volumes:
      - bazarr-config:/config
      - /mnt/storage/media/movies:/movies:z
      - /mnt/storage/media/tv:/tv:z
  homeassistant:
    container_name: homeassistant
    env_file:
      - config/vars.env
    image: ghcr.io/home-assistant/home-assistant:stable
    ports:
      - 1400:1400 # Sonos
    restart: unless-stopped
    volumes:
      - homeassistant-config:/config
      - ./config/homeassistant/configuration.yaml:/config/configuration.yaml:Z
  influxdb:
    container_name: influxdb
    env_file:
      - config/vars.env
    image: influxdb:alpine
    restart: unless-stopped
    volumes:
      - influxdb-data:/var/lib/influxdb2
  jackett:
    container_name: jackett
    env_file:
      - config/vars.env
    image: lscr.io/linuxserver/jackett
    restart: unless-stopped
    volumes:
      - jackett-config:/config
  overseerr:
    container_name: overseerr
    env_file:
      - config/vars.env
    image: lscr.io/linuxserver/overseerr
    restart: unless-stopped
    volumes:
      - overseerr-config:/config
  plex:
    container_name: plex
    deploy:
      resources:
        reservations:
          devices:
            - capabilities:
                - gpu
    env_file:
      - config/vars.env
    environment:
      ADVERTISE_IP: https://plex.ts.zeus.sjer.red,https://plex.public.zeus.sjer.red
      NVIDIA_DRIVER_CAPABILITIES: all
      NVIDIA_VISIBLE_DEVICES: all
    image: plexinc/pms-docker
    ports:
      - 32400:32400/tcp
      - 3005:3005/tcp
      - 8324:8324/tcp
      - 32469:32469/tcp
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
    restart: unless-stopped
    shm_size: 8GB
    volumes:
      - /mnt/storage/plex:/config:z
      - /dev/shm:/transcode
      - /mnt/storage/media/tv:/data/tv:z
      - /mnt/storage/media/movies:/data/movies:z
      - /mnt/storage/media/music:/data/music:z
      - /mnt/storage/media/other:/data/other:z
      - /mnt/storage/media/lectures:/data/lectures:z
    devices:
      - /dev/dvb:/dev/dvb
  radarr:
    container_name: radarr
    env_file:
      - config/vars.env
    image: lscr.io/linuxserver/radarr
    restart: unless-stopped
    volumes:
      - radarr-config:/config
      - /mnt/storage/media/movies:/movies:z
      - /mnt/storage/downloads/torrents:/downloads:z
  sonarr:
    container_name: sonarr
    env_file:
      - config/vars.env
    image: lscr.io/linuxserver/sonarr
    restart: unless-stopped
    volumes:
      - sonarr-config:/config
      - /mnt/storage/media/tv:/tv:z
      - /mnt/storage/downloads/torrents:/downloads:z
  speedtest:
    container_name: speedtest
    env_file:
      - config/vars.env
    image: jraviles/prometheus_speedtest
    restart: unless-stopped
  syncthing:
    container_name: syncthing
    env_file:
      - config/vars.env
    hostname: syncthing
    image: syncthing/syncthing
    ports:
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    restart: unless-stopped
    volumes:
      - syncthing-config:/var/syncthing/
      - /mnt/storage/syncthing:/syncthing:Z
  syncthing_exporter:
    container_name: syncthing_exporter
    env_file:
      - config/vars.env
    environment:
      SYNCTHING_TOKEN: Gx4RRiqFLaqcx3Z4MD2ZokjaWmW4DweP
      SYNCTHING_URI: http://syncthing:8384/
    image: f100024/syncthing_exporter
    restart: unless-stopped
  tailscale:
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    command: tailscaled
    container_name: tailscale
    env_file:
      - config/vars.env
    image: tailscale/tailscale
    network_mode: host
    restart: unless-stopped
    volumes:
      - /var/lib:/var/lib
      - /dev/net/tun:/dev/net/tun
      - tailscale-data:/tailscale
  tautulli:
    container_name: tautulli
    env_file:
      - config/vars.env
    image: ghcr.io/tautulli/tautulli
    restart: unless-stopped
    volumes:
      - tautulli-data:/config
      - /mnt/storage/plex/Plex\ Media\ Server/Logs:/plex_logs:ro,z
  varken:
    container_name: varken
    env_file:
      - config/vars.env
    image: boerderij/varken
    restart: unless-stopped
    volumes:
      - ./config/varken.ini:/config/varken.ini:Z
  volumerize:
    container_name: volumerize
    env_file:
      - config/vars.env
    environment:
      VOLUMERIZE_CONTAINERS: jackett sonarr radarr overseerr syncthing homeassistant influxdb tautulli
      VOLUMERIZE_FULL_IF_OLDER_THAN: 28D
      VOLUMERIZE_JOBBER_TIME: 0 0 4 * * *
      VOLUMERIZE_SOURCE: /source
      VOLUMERIZE_TARGET: file:///target
    image: blacklabelops/volumerize:1.7.1
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:z
      - volumerize-cache:/volumerize-cache
      - /mnt/storage/backup:/target:Z
      - jackett-config:/source/jackett-config:ro
      - sonarr-config:/source/sonarr-config:ro
      - radarr-config:/source/radarr-config:ro
      - overseerr-config:/source/overseerr-config:ro
      - syncthing-config:/source/syncthing-config:ro
      - homeassistant-config:/source/homeassistant-config:ro
      - influxdb-data:/source/influxdb-data:ro
      - tautulli-data:/source/tautulli-data:ro
      - tailscale-data:/source/tailscale-data:ro
      - bazarr-config:/source/bazarr-config:ro
  watchtower:
    container_name: watchtower
    env_file:
      - config/vars.env
    image: containrrr/watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:z
version: "3.8"
volumes:
  bazarr-config:
    name: zeus_bazarr-config
    external: true
  homeassistant-config:
    name: zeus_homeassistant-config
    external: true
  influxdb-data:
    name: zeus_influxdb-data
    external: true
  jackett-config:
    name: zeus_jackett-config
    external: true
  overseerr-config:
    name: zeus_overseerr-config
    external: true
  radarr-config:
    name: zeus_radarr-config
    external: true
  sonarr-config:
    name: zeus_sonarr-config
    external: true
  syncthing-config:
    name: zeus_syncthing-config
    external: true
  tailscale-data:
    name: zeus_tailscale-data
    external: true
  tautulli-data:
    name: zeus_tautulli-data
    external: true
  volumerize-cache:
    name: zeus_volumerize-cache
    external: true
  caddy-public-config:
    name: zeus_caddy-public-config
    external: true
  caddy-public-data:
    name: zeus_caddy-public-data
    external: true
  caddy-tailscale-config:
    name: zeus_caddy-tailscale-config
    external: true
  caddy-tailscale-data:
    name: zeus_caddy-tailscale-data
    external: true
  qbittorrent-config:
    name: zeus_qbittorrent-config
    external: true
