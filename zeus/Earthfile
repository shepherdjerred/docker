VERSION 0.6
FROM alpine
WORKDIR /workspace

rsync:
  RUN apk add rsync openssh
  RUN mkdir -p /root/.ssh/
  COPY ssh/known_hosts /root/.ssh/known_hosts

sync:
  FROM +rsync
  COPY +render/ .
  RUN --no-cache --ssh rsync --progress -a --checksum . jerred@public.zeus.sjer.red:/home/jerred/config

up:
  FROM +sync
  RUN --no-cache --ssh ssh jerred@public.zeus.sjer.red "cd /home/jerred/config && docker-compose pull && docker-compose build && docker-compose down --remove-orphans && docker-compose up -d --remove-orphans"

lint:
  BUILD +lint.docker-compose

lint.docker-compose:
  FROM ./lint+lint.docker-compose
  COPY +render.docker-compose/ .
  RUN ./lint.py
  FROM lscr.io/linuxserver/docker-compose
  COPY +render/ .
  RUN docker-compose config

gomplate:
  FROM golang:1.19-alpine
  WORKDIR /workspace
  RUN go install github.com/hairyhenderson/gomplate/v3/cmd/gomplate@latest

render:
  COPY config ./config/
  COPY static ./static/
  COPY +render.varken/ ./config/
  COPY +render.wireguard/ ./config/wireguard/
  COPY +render.cloudflare-ddns/ ./config/cloudflare-ddns/
  COPY +render.docker-compose/ ./
  SAVE ARTIFACT *

render.cloudflare-ddns:
  FROM +gomplate
  COPY config/cloudflare-ddns/config.json.tmpl .
  RUN --secret=CLOUDFLARE_TOKEN gomplate -d vars=./vars.json -f config.json.tmpl -o config.json

render.docker-compose:
  FROM +gomplate
  COPY compose.yml .
  COPY vars.json .
  RUN --secret=DATADOG_API_KEY --secret=CLOUDFLARE_TOKEN gomplate -d vars=./vars.json -f compose.yml -o compose.yml
  SAVE ARTIFACT compose.yml

render.wireguard:
  FROM +gomplate
  COPY config/wireguard/wg0.conf .
  RUN --secret=WIREGUARD_PRIVATE_KEY --secret=WIREGUARD_PUBLIC_KEY gomplate -f wg0.conf -o wg0.conf
  SAVE ARTIFACT wg0.conf

render.varken:
  FROM +gomplate
  COPY config/varken.ini .
  RUN --secret=MAXMIND_LICENSE_KEY --secret=INFLUXDB_PASSWORD --secret=TAUTULLI_API_KEY --secret=SONARR_API_KEY --secret=RADARR_API_KEY gomplate -f varken.ini -o varken.ini
  SAVE ARTIFACT varken.ini
